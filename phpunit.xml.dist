<?xml version="1.0" encoding="utf-8"?>
<!--
    Use this configuration file as a template to run the tests against any dbms.
    Procedure:
        1) Save a copy of this file with a name of your choosing. It doesn't matter
           where you place it as long as you know where it is.
           i.e. "mysqlconf.xml" (It needs the ending .xml).
        2) Edit the file and fill in your settings (database name, type, username, etc.)
           Just change the "value"s, not the names of the var elements.
        3) To run the tests against the database type the following from within the
           tests/ folder: phpunit -c <filename> ...
           Example: phpunit -c mysqlconf.xml AllTests
-->
<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="vendor/phpunit/phpunit/phpunit.xsd"
         colors="true"
         verbose="false"
         failOnRisky="true"
         convertDeprecationsToExceptions="true"
         bootstrap="./tests/Doctrine/Tests/TestInit.php"
>
    <testsuites>
        <testsuite name="Doctrine ORM Test Suite">
            <directory>./tests/Doctrine/Tests/ORM</directory>
        </testsuite>
    </testsuites>

    <groups>
        <exclude>
            <group>performance</group>
            <group>locking_functional</group>
        </exclude>
    </groups>

  <php>
    <ini name="error_reporting" value="-1" />
    <!-- "Real" test database -->
    <var name="db_driver" value="pdo_sqlite"/>
    <var name="db_memory" value="true"/>
      <!-- to use another database driver / credentials, provide them like so:
      <var name="db_driver" value="pdo_mysql"/>
      <var name="db_host" value="localhost" />
      <var name="db_user" value="root" />
      <var name="db_password" value="" />
      <var name="db_dbname" value="doctrine_tests" />
      <var name="db_port" value="3306"/>-->
    <!--<var name="db_event_subscribers" value="Doctrine\DBAL\Event\Listeners\OracleSessionInit">-->

    <!--
     At the start of each test run, we will drop and recreate the test database.

     By default we assume that the `db_` config above has unrestricted access to the provided database
     platform.

     If you prefer, you can provide a restricted user above and a separate `privileged_db` config
     block to provide details of a privileged connection to use for the setup / teardown actions.

     Note that these configurations are not merged - if you specify a `privileged_db_driver` then
     you must also specify all the other options that your driver requires.

    <var name="privileged_db_driver" value="pdo_mysql"/>
    <var name="privileged_db_host" value="localhost" />
    <var name="privileged_db_user" value="root" />
    <var name="privileged_db_password" value="" />
    <var name="privileged_db_dbname" value="doctrine_tests_tmp" />
    <var name="privileged_db_port" value="3306"/>
    -->

    <env name="COLUMNS" value="120"/>
  </php>

</phpunit>
