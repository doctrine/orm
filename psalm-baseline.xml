<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.11.0@c9b192ab8400fdaf04b2b13d110575adc879aa90">
  <file src="lib/Doctrine/ORM/AbstractQuery.php">
    <FalsableReturnStatement>
      <code><![CDATA[! $filteredParameters->isEmpty() ? $filteredParameters->first() : null]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <MissingClosureParamType>
      <code>$alias</code>
      <code>$data</code>
      <code>$data</code>
    </MissingClosureParamType>
    <PossiblyInvalidArgument>
      <code>$stmt</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>getCacheLogger</code>
      <code>getQueryCache</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/CacheConfiguration.php">
    <PossiblyNullReference>
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCache.php">
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$em->getConfiguration()
            ->getSecondLevelCacheConfiguration()
            ->getCacheFactory()]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultEntityHydrator.php">
    <UndefinedInterfaceMethod>
      <code>getCacheRegion</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultQueryCache.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$assocKeys->identifiers[$assocIndex]]]></code>
      <code><![CDATA[$assocKeys->identifiers[$assocIndex]]]></code>
      <code><![CDATA[$cacheKeys->identifiers[$index]]]></code>
      <code><![CDATA[$cacheKeys->identifiers[$index]]]></code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties>
      <code><![CDATA[$assocEntry->class]]></code>
      <code><![CDATA[$assocEntry->class]]></code>
    </NoInterfaceProperties>
    <PossiblyNullReference>
      <code>getCacheLogger</code>
    </PossiblyNullReference>
    <RedundantCondition>
      <code>assert($cm instanceof ClassMetadata)</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod>
      <code>getCacheRegion</code>
      <code>resolveAssociationEntries</code>
      <code>resolveAssociationEntries</code>
      <code>storeEntityCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/AbstractCollectionPersister.php">
    <ArgumentTypeCoercion>
      <code>$cache</code>
      <code>$entityKey</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties>
      <code><![CDATA[$entry->identifiers]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>buildCollectionHydrator</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/NonStrictReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadOnlyCachedCollectionPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <UndefinedInterfaceMethod>
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/AbstractEntityPersister.php">
    <ArgumentTypeCoercion>
      <code>$cacheEntry</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties>
      <code><![CDATA[$cacheEntry->class]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$em->getCache()]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>getCacheFactory</code>
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType>
      <code>assert($metadata instanceof ClassMetadata)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>loadCollectionCache</code>
      <code>loadCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/ReadWriteCachedEntityPersister.php">
    <RedundantCondition>
      <code>$isChanged</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod>
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampQueryCacheValidator.php">
    <NoInterfaceProperties>
      <code><![CDATA[$timestamp->time]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Configuration.php">
    <ArgumentTypeCoercion>
      <code>$className</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Decorator/EntityManagerDecorator.php">
    <InvalidReturnStatement>
      <code><![CDATA[$this->wrapped->getClassMetadata($className)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>ClassMetadata</code>
    </InvalidReturnType>
  </file>
  <file src="lib/Doctrine/ORM/EntityManager.php">
    <ArgumentTypeCoercion>
      <code>$className</code>
    </ArgumentTypeCoercion>
    <InvalidReturnStatement>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code><![CDATA[$entity instanceof $class->name ? $entity : null]]></code>
      <code><![CDATA[$entity instanceof $class->name ? $entity : null]]></code>
      <code><![CDATA[$persister->load($sortedId, null, null, [], $lockMode)]]></code>
      <code><![CDATA[$persister->loadById($sortedId)]]></code>
      <code><![CDATA[$this->metadataFactory]]></code>
      <code><![CDATA[$this->metadataFactory->getMetadataFor($className)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>ClassMetadataFactory</code>
      <code>Mapping\ClassMetadata</code>
    </InvalidReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$config->getProxyDir()]]></code>
      <code><![CDATA[$config->getProxyNamespace()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>createCache</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code>new $metadataFactoryClassName()</code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(string) $hydrationMode</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/EntityRepository.php">
    <InvalidReturnStatement>
      <code><![CDATA[$persister->load($criteria, null, null, [], null, 1, $orderBy)]]></code>
      <code>new LazyCriteriaCollection($persister, $criteria)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[AbstractLazyCollection<int, T>&Selectable<int, T>]]></code>
      <code>T|null</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code><![CDATA[$persister->loadAll($criteria, $orderBy, $limit, $offset)]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<T>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Id/AssignedGenerator.php">
    <PossiblyNullArgument>
      <code>$entity</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Internal/CommitOrderCalculator.php">
    <RedundantCondition>
      <code><![CDATA[$vertex->state !== VertexState::Visited]]></code>
      <code><![CDATA[$vertex->state !== VertexState::Visited]]></code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/AbstractHydrator.php">
    <ReferenceConstraintViolation>
      <code>return $rowData;</code>
      <code>return $rowData;</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ArrayHydrator.php">
    <PossiblyInvalidArgument>
      <code>$index</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code>$index</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAssignment>
      <code>$result[$resultKey]</code>
      <code>$result[$resultKey]</code>
    </PossiblyNullArrayAssignment>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$newObject['args']]]></code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation>
      <code>$result</code>
    </ReferenceConstraintViolation>
    <ReferenceReusedFromConfusingScope>
      <code>$baseElement</code>
    </ReferenceReusedFromConfusingScope>
    <UnsupportedReferenceUsage>
      <code><![CDATA[$baseElement =& $this->resultPointers[$parent][key($first)]]]></code>
      <code><![CDATA[$this->resultPointers[$dqlAlias] =& $coll[array_key_last($coll)]]]></code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ObjectHydrator.php">
    <InvalidArgument>
      <code>$element</code>
    </InvalidArgument>
    <PossiblyFalseArgument>
      <code>$index</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$newObject['args']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/AssociationMapping.php">
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>static</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.php">
    <ArgumentTypeCoercion>
      <code>$repositoryClassName</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.php">
    <PossiblyNullArgument>
      <code>$class</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadata.php">
    <DeprecatedProperty>
      <code><![CDATA[$this->columnNames]]></code>
      <code><![CDATA[$this->columnNames]]></code>
      <code><![CDATA[$this->columnNames]]></code>
      <code><![CDATA[$this->columnNames]]></code>
    </DeprecatedProperty>
    <InvalidArgument>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$overrideMapping</code>
    </InvalidArgument>
    <InvalidNullableReturnType>
      <code>ReflectionClass|null</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue>
      <code>$definition</code>
      <code><![CDATA[$this->subClasses]]></code>
    </InvalidPropertyAssignmentValue>
    <LessSpecificReturnStatement>
      <code>$className</code>
      <code>$className</code>
      <code>$columnNames</code>
      <code><![CDATA[$this->namespace . '\\' . $className]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>class-string|null</code>
      <code><![CDATA[list<string>]]></code>
    </MoreSpecificReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->reflClass]]></code>
    </NullableReturnStatement>
    <ParamNameMismatch>
      <code>$entity</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$class</code>
      <code>$className</code>
      <code><![CDATA[$mapping['targetEntity']]]></code>
      <code><![CDATA[$mapping['targetEntity']]]></code>
      <code><![CDATA[$parentReflFields[$embeddedClass->declaredField]]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>instantiate</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$mapping['isOwningSide']]]></code>
      <code><![CDATA[$mapping['isOwningSide']]]></code>
      <code><![CDATA[$mapping['isOwningSide']]]></code>
      <code><![CDATA[$mapping['targetEntity']]]></code>
      <code><![CDATA[$table['name']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor>
      <code>$idGenerator</code>
      <code>$table</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code>$mapping !== false</code>
      <code>$mapping !== false</code>
    </RedundantCondition>
    <RedundantFunctionCall>
      <code>array_values</code>
    </RedundantFunctionCall>
    <RedundantPropertyInitializationCheck>
      <code><![CDATA[$this->table]]></code>
      <code>null</code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataFactory.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[new $definition['class']()]]></code>
    </ArgumentTypeCoercion>
    <InvalidArrayOffset>
      <code><![CDATA[$subClass->table[$indexType][$indexName]]]></code>
    </InvalidArrayOffset>
    <PossiblyInvalidIterator>
      <code><![CDATA[$parentClass->table[$indexType]]]></code>
    </PossiblyInvalidIterator>
    <PossiblyNullArgument>
      <code><![CDATA[$this->em]]></code>
      <code><![CDATA[$this->em]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getAllClassNames</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConnection</code>
      <code>hasListeners</code>
      <code>hasListeners</code>
      <code>loadMetadataForClass</code>
    </PossiblyNullReference>
    <RedundantCondition>
      <code><![CDATA[$parent->generatorType]]></code>
      <code><![CDATA[$parent->idGenerator]]></code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultEntityListenerResolver.php">
    <InvalidStringClass>
      <code>new $className()</code>
    </InvalidStringClass>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->instances]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultNamingStrategy.php">
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($className, '\\')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php">
    <LessSpecificReturnStatement>
      <code>$quotedColumnNames</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>array</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultTypedFieldMapper.php">
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>array</code>
    </MoreSpecificReturnType>
    <PropertyTypeCoercion>
      <code>array_merge(self::DEFAULT_TYPED_FIELD_MAPPINGS, $typedFieldMappings)</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/AttributeDriver.php">
    <InvalidArgument>
      <code>$mapping</code>
      <code><![CDATA[[
                            'sequenceName' => $seqGeneratorAttribute->sequenceName,
                            'allocationSize' => $seqGeneratorAttribute->allocationSize,
                            'initialValue' => $seqGeneratorAttribute->initialValue,
                        ]]]></code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>array{
     *                   fieldName: string,
     *                   type: mixed,
     *                   scale: int,
     *                   length: int,
     *                   unique: bool,
     *                   nullable: bool,
     *                   precision: int,
     *                   enumType?: class-string,
     *                   options?: mixed[],
     *                   columnName?: string,
     *                   columnDefinition?: string
     *               }</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code>$listenerClassName</code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code><![CDATA[$metadata->getReflectionClass()]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>assert($cacheAttribute instanceof Mapping\Cache)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($property instanceof ReflectionProperty)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull>
      <code><![CDATA[new ReflectionClass($metadata->name)]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/DatabaseDriver.php">
    <DocblockTypeContradiction>
      <code>$metadata instanceof ClassMetadata</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$this->tables[$tableName]]]></code>
      <code><![CDATA[$this->tables[$tableName]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference>
      <code>getColumns</code>
      <code>getColumns</code>
      <code>getIndexes</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.php">
    <MissingParamType>
      <code>$fileExtension</code>
      <code>$prefixes</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/XmlDriver.php">
    <ArgumentTypeCoercion>
      <code>$mapping</code>
      <code><![CDATA[(string) $xmlRoot['repository-class']]]></code>
      <code><![CDATA[isset($xmlRoot['repository-class']) ? (string) $xmlRoot['repository-class'] : null]]></code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code>$columnDef</code>
      <code><![CDATA[$this->cacheToArray($manyToManyElement->cache)]]></code>
      <code><![CDATA[$this->cacheToArray($manyToOneElement->cache)]]></code>
      <code><![CDATA[$this->cacheToArray($oneToManyElement->cache)]]></code>
      <code><![CDATA[$this->cacheToArray($oneToOneElement->cache)]]></code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$metadata->table]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidPropertyFetch>
      <code><![CDATA[$indexXml->options]]></code>
      <code><![CDATA[$uniqueXml->options]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-column'}]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-map'}]]></code>
    </InvalidPropertyFetch>
    <InvalidReturnStatement>
      <code>$mapping</code>
      <code><![CDATA[[
            'usage'  => $usage,
            'region' => $region,
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>array{
      *                   fieldName: string,
      *                   type?: string,
      *                   columnName?: string,
      *                   length?: int,
      *                   precision?: int,
      *                   scale?: int,
      *                   unique?: bool,
      *                   nullable?: bool,
      *                   notInsertable?: bool,
      *                   notUpdatable?: bool,
      *                   enumType?: string,
      *                   version?: bool,
      *                   columnDefinition?: string,
      *                   options?: array
      *               }</code>
      <code>array{usage: int|null, region?: string}</code>
    </InvalidReturnType>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <NoInterfaceProperties>
      <code><![CDATA[$indexXml->options]]></code>
      <code><![CDATA[$uniqueXml->options]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-column'}]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-map'}]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$joinColumnElement['options']->children()]]></code>
      <code><![CDATA[$option->children()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullIterator>
      <code><![CDATA[$cascadeElement->children()]]></code>
    </PossiblyNullIterator>
    <TypeDoesNotContainType>
      <code><![CDATA[$xmlRoot->getName() === 'embeddable']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'entity']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'mapped-superclass']]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ManyToManyInverseSideMapping.php">
    <PropertyNotSetInConstructor>
      <code>ManyToManyInverseSideMapping</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ManyToManyOwningSideMapping.php">
    <PropertyNotSetInConstructor>
      <code>$joinTable</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code><![CDATA[$mapping->joinTable]]></code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>new JoinTableMapping()</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/OneToManyAssociationMapping.php">
    <PropertyNotSetInConstructor>
      <code>OneToManyAssociationMapping</code>
    </PropertyNotSetInConstructor>
    <TypeDoesNotContainType>
      <code><![CDATA[isset($mapping->mappedBy)]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/OneToOneInverseSideMapping.php">
    <PropertyNotSetInConstructor>
      <code>OneToOneInverseSideMapping</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEmbeddedProperty.php">
    <MethodSignatureMismatch>
      <code>$object</code>
    </MethodSignatureMismatch>
    <PropertyNotSetInConstructor>
      <code>ReflectionEmbeddedProperty</code>
      <code>ReflectionEmbeddedProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEnumProperty.php">
    <MethodSignatureMismatch>
      <code>$object</code>
    </MethodSignatureMismatch>
    <PropertyNotSetInConstructor>
      <code>ReflectionEnumProperty</code>
      <code>ReflectionEnumProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionReadonlyProperty.php">
    <PropertyNotSetInConstructor>
      <code>ReflectionReadonlyProperty</code>
      <code>ReflectionReadonlyProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ToOneInverseSideMapping.php">
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>static</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ToOneOwningSideMapping.php">
    <LessSpecificReturnStatement>
      <code>$instance</code>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>static</code>
      <code>static</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/UnderscoreNamingStrategy.php">
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($className, '\\')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/NativeQuery.php">
    <PropertyNotSetInConstructor>
      <code>$sql</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/PersistentCollection.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[Collection<TKey, T>]]></code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement>
      <code><![CDATA[$association['fetch'] === ClassMetadata::FETCH_EXTRA_LAZY
            ? new LazyCriteriaCollection($persister, $criteria)
            : new ArrayCollection($persister->loadCriteria($criteria))]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[Collection<TKey, T>]]></code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->unwrap()->matching($criteria)]]></code>
    </LessSpecificReturnStatement>
    <ParamNameMismatch>
      <code>$value</code>
      <code>$value</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code><![CDATA[$this->backRefFieldName]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <UndefinedMethod>
      <code><![CDATA[[$this->unwrap(), 'add']]]></code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/ManyToManyPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getFieldForColumn</code>
      <code>getFieldForColumn</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/OneToManyPersister.php">
    <InvalidReturnStatement>
      <code>$numDeleted</code>
      <code><![CDATA[$this->conn->executeStatement($statement, $parameters)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <UndefinedPropertyFetch>
      <code><![CDATA[$mapping->mappedBy]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/BasicEntityPersister.php">
    <DocblockTypeContradiction>
      <code>$value === null</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$hints</code>
      <code>$hints</code>
      <code><![CDATA[[Query::HINT_REFRESH => true]]]></code>
      <code><![CDATA[[UnitOfWork::HINT_DEFEREAGERLOAD => true]]]></code>
      <code><![CDATA[[UnitOfWork::HINT_DEFEREAGERLOAD => true]]]></code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code>$newValue</code>
      <code>[$params, $types]</code>
      <code>[$sqlParams, $sqlTypes]</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>array</code>
      <code>array</code>
      <code><![CDATA[list<mixed>]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullReference>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->currentPersisterContext->sqlTableAliases]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/CachedPersisterContext.php">
    <PropertyNotSetInConstructor>
      <code>$selectJoinSql</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Proxy/ProxyFactory.php">
    <ArgumentTypeCoercion>
      <code>$classMetadata</code>
      <code>$classMetadata</code>
      <code>$classMetadata</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$classMetadata->getReflectionProperties()]]></code>
    </InvalidArgument>
    <NoInterfaceProperties>
      <code><![CDATA[$metadata->isEmbeddedClass]]></code>
      <code><![CDATA[$metadata->isMappedSuperclass]]></code>
      <code><![CDATA[$proxy->__isCloning]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$property->name]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$property->name]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>getValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>__wakeup</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query.php">
    <InvalidArgument>
      <code>$sqlParams</code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->parse()->getSqlExecutor()->getSqlStatements()]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<string>|string]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getDQL()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>evictEntityRegion</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor>
      <code>$parserResult</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitAndFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitOrFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateAddFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <UndefinedPropertyFetch>
      <code><![CDATA[$this->unit->value]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateDiffFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateSubFunction.php">
    <UndefinedPropertyFetch>
      <code><![CDATA[$this->unit->value]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/FunctionNode.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LocateFunction.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->simpleArithmeticExpression]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinClassPathExpression.php">
    <UndefinedMethod>
      <code>walkJoinPathExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinVariableDeclaration.php">
    <UndefinedMethod>
      <code>walkJoinVariableDeclaration</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleWhenClause.php">
    <UndefinedMethod>
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/WhenClause.php">
    <UndefinedMethod>
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.php">
    <InvalidReturnStatement>
      <code>$numDeleted</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator>
      <code><![CDATA[$this->sqlStatements]]></code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor>
      <code>MultiTableDeleteExecutor</code>
    </PropertyNotSetInConstructor>
    <UninitializedProperty>
      <code><![CDATA[$this->sqlStatements]]></code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.php">
    <InvalidReturnStatement>
      <code>$numUpdated</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator>
      <code><![CDATA[$this->sqlStatements]]></code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor>
      <code>MultiTableUpdateExecutor</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->sqlStatements]]></code>
    </PropertyTypeCoercion>
    <UninitializedProperty>
      <code><![CDATA[$this->sqlStatements]]></code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleSelectExecutor.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->sqlStatements]]></code>
    </PossiblyInvalidArgument>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.php">
    <InvalidReturnStatement>
      <code><![CDATA[$conn->executeStatement($this->sqlStatements, $params, $types)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->sqlStatements]]></code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor>
      <code>SingleTableDeleteUpdateExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Andx.php">
    <NonInvariantDocblockPropertyType>
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Func.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->arguments]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<mixed>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/GroupBy.php">
    <NonInvariantDocblockPropertyType>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Join.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->conditionType]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Literal.php">
    <NonInvariantDocblockPropertyType>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Orx.php">
    <NonInvariantDocblockPropertyType>
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Select.php">
    <NonInvariantDocblockPropertyType>
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Filter/SQLFilter.php">
    <PropertyTypeCoercion>
      <code><![CDATA[$this->parameters]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/Parser.php">
    <ArgumentTypeCoercion>
      <code>$stringPattern</code>
    </ArgumentTypeCoercion>
    <InvalidNullableReturnType>
      <code>AST\SelectStatement|AST\UpdateStatement|AST\DeleteStatement</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->queryComponents]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidStringClass>
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code>$function</code>
      <code>$function</code>
      <code>$function</code>
    </LessSpecificReturnStatement>
    <NullableReturnStatement>
      <code>$statement</code>
    </NullableReturnStatement>
    <PossiblyFalseArgument>
      <code><![CDATA[strrpos($fromClassName, '\\')]]></code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument>
      <code>$AST</code>
      <code>$conditionalExpression</code>
      <code>$expr</code>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->lexer->getLiteral($token)]]></code>
      <code><![CDATA[$this->lexer->getLiteral($token)]]></code>
      <code><![CDATA[$this->lexer->getLiteral($token)]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArgument>
      <code>$dql</code>
      <code><![CDATA[$this->query->getDQL()]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$lookaheadType->value]]></code>
      <code><![CDATA[$lookaheadType->value]]></code>
      <code><![CDATA[$this->lexer->glimpse()->type]]></code>
      <code><![CDATA[$token->value]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullPropertyFetch>
    <RedundantCondition>
      <code><![CDATA[$token->value === TokenType::T_IDENTIFIER->value]]></code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Query/QueryExpressionVisitor.php">
    <InvalidReturnStatement>
      <code><![CDATA[new ArrayCollection($this->parameters)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[ArrayCollection<int, mixed>]]></code>
    </InvalidReturnType>
    <RedundantConditionGivenDocblockType>
      <code>Comparison::EQ</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/SqlWalker.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$this->conn->quote((string) $newValue)]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$join->conditionalExpression]]></code>
    </InvalidArgument>
    <PossiblyInvalidArgument>
      <code>$expr</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$arithmeticExpr->simpleArithmeticExpression]]></code>
      <code><![CDATA[$arithmeticExpr->subselect]]></code>
      <code>$condExpr</code>
      <code><![CDATA[$generalCaseExpression->elseScalarExpression]]></code>
      <code><![CDATA[$identificationVariableDecl->rangeVariableDeclaration]]></code>
      <code><![CDATA[$simpleCaseExpression->caseOperand]]></code>
      <code><![CDATA[$simpleCaseExpression->elseScalarExpression]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$this->scalarResultAliasMap]]></code>
      <code><![CDATA[$this->scalarResultAliasMap]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>dispatch</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/QueryBuilder.php">
    <ArgumentTypeCoercion>
      <code>$having</code>
      <code>$having</code>
      <code>$where</code>
      <code>$where</code>
      <code><![CDATA[[$rootAlias => $join]]]></code>
      <code><![CDATA[[$rootAlias => $join]]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>getRootAlias</code>
      <code>getRootAlias</code>
    </DeprecatedMethod>
    <FalsableReturnStatement>
      <code><![CDATA[! $filteredParameters->isEmpty() ? $filteredParameters->first() : null]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <InvalidPropertyAssignmentValue>
      <code>new ArrayCollection($parameters)</code>
    </InvalidPropertyAssignmentValue>
    <PossiblyFalseArgument>
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand>
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseOperand>
    <PossiblyInvalidIterator>
      <code>$dqlPart</code>
    </PossiblyInvalidIterator>
  </file>
  <file src="lib/Doctrine/ORM/Repository/DefaultRepositoryFactory.php">
    <InvalidReturnStatement>
      <code><![CDATA[$this->repositoryList[$repositoryHash] ??= $this->createRepository($entityManager, $entityName)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>EntityRepository</code>
    </InvalidReturnType>
    <UnsafeInstantiation>
      <code>new $repositoryClassName($entityManager, $metadata)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/CollectionRegionCommand.php">
    <PossiblyNullReference>
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/EntityRegionCommand.php">
    <PossiblyNullReference>
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.php">
    <NoInterfaceProperties>
      <code><![CDATA[$metadata->name]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$em->getConfiguration()->getProxyDir()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/InfoCommand.php">
    <PossiblyNullReference>
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/MappingDescribeCommand.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$metadata->entityListeners]]></code>
    </ArgumentTypeCoercion>
    <PossiblyNullReference>
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/RunDqlCommand.php">
    <DeprecatedClass>
      <code><![CDATA[Debug::dump($resultSet, (int) $input->getOption('depth'), true, false)]]></code>
    </DeprecatedClass>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
      <code>$metadatas</code>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getName()]]></code>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getName()]]></code>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/MetadataFilter.php">
    <InvalidArgument>
      <code>new ArrayIterator($metadatas)</code>
    </InvalidArgument>
    <MissingTemplateParam>
      <code>MetadataFilter</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ORM/Tools/DebugUnitOfWorkListener.php">
    <RedundantConditionGivenDocblockType>
      <code>$state === UnitOfWork::STATE_DETACHED</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.php">
    <PossiblyFalseArgument>
      <code><![CDATA[strrpos($orderByItemString, ' ')]]></code>
    </PossiblyFalseArgument>
    <PossiblyNullIterator>
      <code><![CDATA[$orderByClause->orderByItems]]></code>
    </PossiblyNullIterator>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$AST->orderByClause]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$orderByClause->orderByItems]]></code>
    </PossiblyNullPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/Paginator.php">
    <ArgumentTypeCoercion>
      <code>$parameters</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/RowNumberOverFunction.php">
    <PropertyNotSetInConstructor>
      <code>$orderByClause</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/WhereInWalker.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$selectStatement->whereClause->conditionalExpression instanceof ConditionalExpression
                || $selectStatement->whereClause->conditionalExpression instanceof ConditionalFactor]]></code>
      <code><![CDATA[$selectStatement->whereClause->conditionalExpression instanceof ConditionalFactor]]></code>
      <code><![CDATA[$selectStatement->whereClause->conditionalExpression instanceof ConditionalPrimary]]></code>
    </DocblockTypeContradiction>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$selectStatement->whereClause->conditionalExpression]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$selectStatement->whereClause->conditionalExpression instanceof ConditionalExpression
                || $selectStatement->whereClause->conditionalExpression instanceof ConditionalFactor]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaTool.php">
    <ArgumentTypeCoercion>
      <code>$classes</code>
    </ArgumentTypeCoercion>
    <MissingClosureParamType>
      <code>$asset</code>
    </MissingClosureParamType>
    <PossiblyNullArgument>
      <code>$referencedFieldName</code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code>is_numeric($indexName)</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>$indexName</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/UnitOfWork.php">
    <InvalidArgument>
      <code>$collectionToDelete</code>
      <code>$collectionToUpdate</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->entityChangeSets]]></code>
      <code><![CDATA[$this->entityChangeSets]]></code>
    </InvalidPropertyAssignmentValue>
    <NoValue>
      <code>$entityState</code>
      <code>$entityState</code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$this->identityMap[$rootClassName]]]></code>
    </PossiblyInvalidArrayOffset>
    <PossiblyNullArgument>
      <code><![CDATA[$class->getTypeOfField($class->getSingleIdentifierFieldName())]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>buildCachedCollectionPersister</code>
      <code>buildCachedEntityPersister</code>
      <code>getCacheFactory</code>
      <code>getCacheFactory</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedMethod>
      <code>unwrap</code>
      <code>unwrap</code>
      <code>unwrap</code>
    </PossiblyUndefinedMethod>
    <RedundantCondition>
      <code><![CDATA[$i >= 0 && $this->entityDeletions]]></code>
      <code><![CDATA[$this->entityDeletions]]></code>
    </RedundantCondition>
    <ReferenceConstraintViolation>
      <code>$visited</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Utility/HierarchyDiscriminatorResolver.php">
    <NoInterfaceProperties>
      <code><![CDATA[$rootClassMetadata->name]]></code>
      <code><![CDATA[$rootClassMetadata->subClasses]]></code>
    </NoInterfaceProperties>
  </file>
</files>
