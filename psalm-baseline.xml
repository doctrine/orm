<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.11.0@c9b192ab8400fdaf04b2b13d110575adc879aa90">
  <file src="lib/Doctrine/ORM/AbstractQuery.php">
    <DeprecatedClass>
      <code>IterableResult</code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code>iterate</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction>
      <code>in_array($fetchMode, [Mapping\ClassMetadata::FETCH_EAGER, Mapping\ClassMetadata::FETCH_LAZY], true)</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement>
      <code><![CDATA[! $filteredParameters->isEmpty() ? $filteredParameters->first() : null]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <InvalidNullableReturnType>
      <code>\Doctrine\Common\Cache\Cache</code>
    </InvalidNullableReturnType>
    <MissingClosureParamType>
      <code>$alias</code>
      <code>$data</code>
      <code>$data</code>
    </MissingClosureParamType>
    <NullableReturnStatement>
      <code><![CDATA[$this->_em->getConfiguration()->getResultCacheImpl()]]></code>
      <code><![CDATA[$this->_queryCacheProfile->getResultCacheDriver()]]></code>
    </NullableReturnStatement>
    <PossiblyInvalidArgument>
      <code>$stmt</code>
      <code>$stmt</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference>
      <code>getCacheLogger</code>
      <code>getQueryCache</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType>
      <code>(bool) $cacheable</code>
      <code>(int) $cacheMode</code>
      <code>(int) $lifetime</code>
      <code>(string) $cacheRegion</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/CacheConfiguration.php">
    <PossiblyNullReference>
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/CollectionCacheKey.php">
    <RedundantCastGivenDocblockType>
      <code>(string) $association</code>
      <code>(string) $entityClass</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCache.php">
    <InvalidOperand>
      <code><![CDATA[! $association['type']]]></code>
    </InvalidOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$em->getConfiguration()
            ->getSecondLevelCacheConfiguration()
            ->getCacheFactory()]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCacheFactory.php">
    <InvalidNullableReturnType>
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->fileLockRegionDirectory]]></code>
    </NullableReturnStatement>
    <RedundantCastGivenDocblockType>
      <code>(string) $fileLockRegionDirectory</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultEntityHydrator.php">
    <InvalidArgument>
      <code><![CDATA[$em->getMetadataFactory()]]></code>
    </InvalidArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$targetClassMetadata->associationMappings]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumnFieldNames']]]></code>
      <code><![CDATA[$assoc['targetToSourceKeyColumns']]]></code>
      <code><![CDATA[$owningAssociation['targetToSourceKeyColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod>
      <code>getCacheRegion</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultQueryCache.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$assocKeys->identifiers[$assocIndex]]]></code>
      <code><![CDATA[$assocKeys->identifiers[$assocIndex]]]></code>
      <code><![CDATA[$cacheKeys->identifiers[$index]]]></code>
      <code><![CDATA[$cacheKeys->identifiers[$index]]]></code>
    </ArgumentTypeCoercion>
    <MissingClosureParamType>
      <code>$id</code>
    </MissingClosureParamType>
    <NoInterfaceProperties>
      <code><![CDATA[$assocEntry->class]]></code>
      <code><![CDATA[$assocEntry->class]]></code>
    </NoInterfaceProperties>
    <PossiblyNullReference>
      <code>getCacheLogger</code>
    </PossiblyNullReference>
    <RedundantCondition>
      <code>assert($cm instanceof ClassMetadata)</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod>
      <code>getCacheRegion</code>
      <code>resolveAssociationEntries</code>
      <code>resolveAssociationEntries</code>
      <code>storeEntityCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/AbstractCollectionPersister.php">
    <ArgumentTypeCoercion>
      <code>$cache</code>
      <code>$entityKey</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties>
      <code><![CDATA[$entry->identifiers]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>buildCollectionHydrator</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/NonStrictReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadOnlyCachedCollectionPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <UndefinedInterfaceMethod>
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/AbstractEntityPersister.php">
    <ArgumentTypeCoercion>
      <code>$cacheEntry</code>
    </ArgumentTypeCoercion>
    <MissingReturnType>
      <code>loadAll</code>
    </MissingReturnType>
    <NoInterfaceProperties>
      <code><![CDATA[$cacheEntry->class]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$em->getCache()]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference>
      <code>getCacheFactory</code>
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType>
      <code>assert($metadata instanceof ClassMetadata)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>loadCollectionCache</code>
      <code>loadCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/ReadWriteCachedEntityPersister.php">
    <RedundantCondition>
      <code>$isChanged</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod>
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Region/DefaultRegion.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->cache]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>CacheProvider</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/RegionsConfiguration.php">
    <RedundantCastGivenDocblockType>
      <code>(int) $defaultLifetime</code>
      <code>(int) $defaultLifetime</code>
      <code>(int) $defaultLockLifetime</code>
      <code>(int) $defaultLockLifetime</code>
      <code>(int) $lifetime</code>
      <code>(int) $lifetime</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampCacheEntry.php">
    <RedundantCastGivenDocblockType>
      <code>(float) $time</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampCacheKey.php">
    <RedundantCastGivenDocblockType>
      <code>(string) $space</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampQueryCacheValidator.php">
    <NoInterfaceProperties>
      <code><![CDATA[$timestamp->time]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Configuration.php">
    <ArgumentTypeCoercion>
      <code>$className</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>getMetadataCacheImpl</code>
      <code>getQueryCacheImpl</code>
    </DeprecatedMethod>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Decorator/EntityManagerDecorator.php">
    <DeprecatedMethod>
      <code>copy</code>
      <code>getHydrator</code>
      <code>transactional</code>
      <code>transactional</code>
    </DeprecatedMethod>
    <InvalidReturnStatement>
      <code><![CDATA[$this->wrapped->getClassMetadata($className)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>getClassMetadata</code>
    </InvalidReturnType>
    <MissingParamType>
      <code>$entity</code>
      <code>$lockMode</code>
      <code>$lockVersion</code>
    </MissingParamType>
    <MissingReturnType>
      <code>wrapInTransaction</code>
    </MissingReturnType>
    <MoreSpecificImplementedParamType>
      <code>$className</code>
    </MoreSpecificImplementedParamType>
    <TooManyArguments>
      <code>find</code>
      <code>flush</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ORM/EntityManager.php">
    <ArgumentTypeCoercion>
      <code>$className</code>
      <code>$connection</code>
      <code>$entityName</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>getMetadataCacheImpl</code>
      <code>merge</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction>
      <code><![CDATA[$entityName !== null && ! is_string($entityName)]]></code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>ClassMetadataFactory</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code><![CDATA[$entity instanceof $class->name ? $entity : null]]></code>
      <code><![CDATA[$entity instanceof $class->name ? $entity : null]]></code>
      <code><![CDATA[$persister->load($sortedId, null, null, [], $lockMode)]]></code>
      <code><![CDATA[$persister->loadById($sortedId)]]></code>
      <code><![CDATA[$this->metadataFactory->getMetadataFor($className)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>?T</code>
      <code>getClassMetadata</code>
    </InvalidReturnType>
    <MissingReturnType>
      <code>wrapInTransaction</code>
    </MissingReturnType>
    <ParamNameMismatch>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entityName</code>
      <code>$entityName</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code><![CDATA[$config->getProxyDir()]]></code>
      <code><![CDATA[$config->getProxyNamespace()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>createCache</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code>new $metadataFactoryClassName()</code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(string) $hydrationMode</code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition>
      <code>$repository instanceof EntityRepository</code>
      <code>is_object($connection)</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code><![CDATA[': "' . $connection . '"']]></code>
    </TypeDoesNotContainType>
    <UnsafeInstantiation>
      <code>new $class($this)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/EntityRepository.php">
    <DeprecatedMethod>
      <code>addNamedNativeQueryMapping</code>
    </DeprecatedMethod>
    <InvalidReturnStatement>
      <code><![CDATA[$persister->load($criteria, null, null, [], null, 1, $orderBy)]]></code>
      <code>new LazyCriteriaCollection($persister, $criteria)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>?T</code>
      <code><![CDATA[AbstractLazyCollection<int, T>&Selectable<int, T>]]></code>
    </InvalidReturnType>
    <TooManyArguments>
      <code>find</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ORM/Event/OnClassMetadataNotFoundEventArgs.php">
    <RedundantCastGivenDocblockType>
      <code>(string) $className</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Exception/ORMException.php">
    <DeprecatedClass>
      <code>BaseORMException</code>
    </DeprecatedClass>
  </file>
  <file src="lib/Doctrine/ORM/Id/AssignedGenerator.php">
    <PossiblyNullArgument>
      <code>$entity</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Id/SequenceGenerator.php">
    <MethodSignatureMustProvideReturnType>
      <code>serialize</code>
      <code>unserialize</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Id/TableGenerator.php">
    <PossiblyFalseOperand>
      <code>$currentLevel</code>
      <code><![CDATA[$this->nextValue]]></code>
      <code><![CDATA[$this->nextValue]]></code>
    </PossiblyFalseOperand>
    <UndefinedMethod>
      <code>getTableHiLoCurrentValSql</code>
      <code>getTableHiLoUpdateNextValSql</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Internal/CommitOrderCalculator.php">
    <RedundantCondition>
      <code><![CDATA[$vertex->state !== VertexState::VISITED]]></code>
      <code><![CDATA[$vertex->state !== VertexState::VISITED]]></code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/AbstractHydrator.php">
    <DeprecatedClass>
      <code>IterableResult</code>
      <code>new IterableResult($this)</code>
    </DeprecatedClass>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$class->associationMappings[$fieldName]['joinColumns']]]></code>
      <code><![CDATA[$class->associationMappings[$fieldName]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation>
      <code>return $rowData;</code>
      <code>return $rowData;</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ArrayHydrator.php">
    <PossiblyInvalidArgument>
      <code>$index</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArrayAssignment>
      <code>$result[$resultKey]</code>
      <code>$result[$resultKey]</code>
    </PossiblyNullArrayAssignment>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$newObject['args']]]></code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation>
      <code>$result</code>
    </ReferenceConstraintViolation>
    <ReferenceReusedFromConfusingScope>
      <code>$baseElement</code>
    </ReferenceReusedFromConfusingScope>
    <UnsupportedReferenceUsage>
      <code><![CDATA[$baseElement =& $this->resultPointers[$parent][key($first)]]]></code>
      <code><![CDATA[$this->resultPointers[$dqlAlias] =& $coll[key($coll)]]]></code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/IterableResult.php">
    <ImplementedReturnTypeMismatch>
      <code>mixed[]|false</code>
    </ImplementedReturnTypeMismatch>
    <MissingTemplateParam>
      <code>Iterator</code>
    </MissingTemplateParam>
    <PossiblyFalsePropertyAssignmentValue>
      <code><![CDATA[$this->hydrator->hydrateRow()]]></code>
      <code><![CDATA[$this->next()]]></code>
    </PossiblyFalsePropertyAssignmentValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$this->current !== false]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ObjectHydrator.php">
    <InvalidArgument>
      <code>$element</code>
    </InvalidArgument>
    <PossiblyFalseArgument>
      <code>$index</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$relation['mappedBy']]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$targetClass->reflFields]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$class->associationMappings[$class->identifier[0]]['joinColumns']]]></code>
      <code><![CDATA[$class->associationMappings[$fieldName]['joinColumns']]]></code>
      <code><![CDATA[$newObject['args']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.php">
    <PropertyNotSetInConstructor>
      <code>$class</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/AnsiQuoteStrategy.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$association['joinTable']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.php">
    <ArgumentTypeCoercion>
      <code>$repositoryClassName</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.php">
    <PossiblyNullArgument>
      <code>$class</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/FieldBuilder.php">
    <PropertyNotSetInConstructor>
      <code>$generatedValue</code>
      <code>$sequenceDef</code>
      <code>$version</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $flag</code>
      <code>(bool) $flag</code>
      <code>(string) $customIdGenerator</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadata.php">
    <PropertyNotSetInConstructor>
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataFactory.php">
    <ArgumentTypeCoercion>
      <code>$class</code>
      <code>$class</code>
      <code><![CDATA[new $definition['class']()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>new UuidGenerator()</code>
    </DeprecatedClass>
    <DeprecatedConstant>
      <code>ClassMetadata::GENERATOR_TYPE_UUID</code>
    </DeprecatedConstant>
    <DeprecatedMethod>
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <InvalidArrayOffset>
      <code><![CDATA[$subClass->table[$indexType][$indexName]]]></code>
    </InvalidArrayOffset>
    <MissingConstructor>
      <code>$driver</code>
      <code>$evm</code>
    </MissingConstructor>
    <PossiblyInvalidIterator>
      <code><![CDATA[$parentClass->table[$indexType]]]></code>
    </PossiblyInvalidIterator>
    <PossiblyNullArgument>
      <code><![CDATA[$this->em]]></code>
      <code><![CDATA[$this->em]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConnection</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataInfo.php">
    <ArgumentTypeCoercion>
      <code>$mapping</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>canEmulateSchemas</code>
      <code>canRequireSQLConversion</code>
    </DeprecatedMethod>
    <DeprecatedProperty>
      <code><![CDATA[$this->columnNames]]></code>
      <code><![CDATA[$this->columnNames]]></code>
      <code><![CDATA[$this->columnNames]]></code>
      <code><![CDATA[$this->columnNames]]></code>
    </DeprecatedProperty>
    <DocblockTypeContradiction>
      <code><![CDATA[! $mapping['isOwningSide']]]></code>
      <code><![CDATA[! $this->table]]></code>
      <code><![CDATA[! class_exists($mapping['targetEntity'])]]></code>
      <code><![CDATA[$this->table]]></code>
      <code><![CDATA[isset($mapping['id']) && $mapping['id'] === true && ! $mapping['isOwningSide']]]></code>
      <code><![CDATA[isset($mapping['orderBy']) && ! is_array($mapping['orderBy'])]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$overrideMapping</code>
    </InvalidArgument>
    <InvalidNullableReturnType>
      <code>ReflectionProperty</code>
      <code>ReflectionProperty</code>
      <code>getAssociationMappedByTargetField</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue>
      <code>$definition</code>
      <code><![CDATA[$this->sqlResultSetMappings]]></code>
      <code><![CDATA[$this->subClasses]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code>$mapping</code>
      <code><![CDATA[$this->reflClass]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>AssociationMapping</code>
      <code>getReflectionClass</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code>$className</code>
      <code>$className</code>
      <code>$columnNames</code>
      <code>$mapping</code>
      <code>$quotedColumnNames</code>
      <code><![CDATA[$this->namespace . '\\' . $className]]></code>
    </LessSpecificReturnStatement>
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <MoreSpecificReturnType>
      <code>FieldMapping</code>
      <code>class-string|null</code>
      <code><![CDATA[list<string>]]></code>
      <code><![CDATA[list<string>]]></code>
    </MoreSpecificReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->associationMappings[$fieldName]['mappedBy']]]></code>
      <code><![CDATA[$this->reflClass]]></code>
      <code><![CDATA[$this->reflFields[$name]]]></code>
      <code><![CDATA[$this->reflFields[$this->identifier[0]]]]></code>
    </NullableReturnStatement>
    <ParamNameMismatch>
      <code>$entity</code>
      <code>$fieldName</code>
      <code>$fieldName</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code>$class</code>
      <code>$className</code>
      <code><![CDATA[$entityResult['entityClass']]]></code>
      <code><![CDATA[$mapping['targetEntity']]]></code>
      <code><![CDATA[$mapping['targetEntity']]]></code>
      <code><![CDATA[$parentReflFields[$embeddedClass['declaredField']]]]></code>
      <code><![CDATA[$parentReflFields[$mapping['declaredField']]]]></code>
      <code><![CDATA[$queryMapping['resultClass']]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$embeddable->reflClass->name]]></code>
      <code><![CDATA[$this->reflClass->name]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>instantiate</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$mapping['fieldName']]]></code>
      <code><![CDATA[$mapping['originalClass']]]></code>
      <code><![CDATA[$mapping['originalField']]]></code>
      <code><![CDATA[$mapping['targetEntity']]]></code>
      <code><![CDATA[$table['name']]]></code>
      <code><![CDATA[$this->associationMappings[$assocName]['joinColumns']]]></code>
      <code><![CDATA[$this->associationMappings[$fieldName]['joinColumns']]]></code>
      <code><![CDATA[$this->associationMappings[$fieldName]['joinColumns']]]></code>
      <code><![CDATA[$this->associationMappings[$idProperty]['joinColumns']]]></code>
      <code><![CDATA[$this->associationMappings[$idProperty]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor>
      <code>$idGenerator</code>
      <code>$namespace</code>
      <code>$table</code>
      <code>$tableGeneratorDefinition</code>
    </PropertyNotSetInConstructor>
    <RedundantConditionGivenDocblockType>
      <code>$mapping !== false</code>
      <code>$mapping !== false</code>
      <code><![CDATA[$mapping['isOwningSide']]]></code>
    </RedundantConditionGivenDocblockType>
    <RedundantFunctionCall>
      <code>array_values</code>
    </RedundantFunctionCall>
    <TooManyArguments>
      <code>joinColumnName</code>
      <code>joinColumnName</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ColumnResult.php">
    <MissingConstructor>
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultEntityListenerResolver.php">
    <DocblockTypeContradiction>
      <code>is_object($object)</code>
    </DocblockTypeContradiction>
    <InvalidStringClass>
      <code>new $className()</code>
    </InvalidStringClass>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->instances]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultNamingStrategy.php">
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($className, '\\')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php">
    <DeprecatedMethod>
      <code>canEmulateSchemas</code>
      <code>canEmulateSchemas</code>
    </DeprecatedMethod>
    <LessSpecificReturnStatement>
      <code>$quotedColumnNames</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>getIdentifierColumnNames</code>
    </MoreSpecificReturnType>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$class->associationMappings[$fieldName]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultTypedFieldMapper.php">
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>array</code>
    </MoreSpecificReturnType>
    <PropertyTypeCoercion>
      <code>array_merge(self::DEFAULT_TYPED_FIELD_MAPPINGS, $typedFieldMappings)</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/AnnotationDriver.php">
    <DeprecatedMethod>
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code><![CDATA[[
                            'sequenceName' => $seqGeneratorAnnot->sequenceName,
                            'allocationSize' => $seqGeneratorAnnot->allocationSize,
                            'initialValue' => $seqGeneratorAnnot->initialValue,
                        ]]]></code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>array{
     *                   fieldName: string,
     *                   type: mixed,
     *                   scale: int,
     *                   length: int,
     *                   unique: bool,
     *                   nullable: bool,
     *                   precision: int,
     *                   notInsertable?: bool,
     *                   notUpdateble?: bool,
     *                   generated?: ClassMetadata::GENERATED_*,
     *                   enumType?: class-string,
     *                   options?: mixed[],
     *                   columnName?: string,
     *                   columnDefinition?: string
     *               }</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code>$listenerClassName</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$primaryTable['indexes']]]></code>
      <code><![CDATA[$primaryTable['uniqueConstraints']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCondition>
      <code><![CDATA[$metadata->getReflectionClass()]]></code>
    </RedundantCondition>
    <TypeDoesNotContainNull>
      <code><![CDATA[new ReflectionClass($metadata->name)]]></code>
    </TypeDoesNotContainNull>
    <UndefinedInterfaceMethod>
      <code>mapEmbedded</code>
      <code>mapManyToMany</code>
      <code>mapManyToOne</code>
      <code>mapOneToMany</code>
      <code>mapOneToOne</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/AttributeDriver.php">
    <ArgumentTypeCoercion>
      <code>$columnDef</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[[
                            'sequenceName' => $seqGeneratorAttribute->sequenceName,
                            'allocationSize' => $seqGeneratorAttribute->allocationSize,
                            'initialValue' => $seqGeneratorAttribute->initialValue,
                        ]]]></code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>array{
     *                   fieldName: string,
     *                   type: mixed,
     *                   scale: int,
     *                   length: int,
     *                   unique: bool,
     *                   nullable: bool,
     *                   precision: int,
     *                   enumType?: class-string,
     *                   options?: mixed[],
     *                   columnName?: string,
     *                   columnDefinition?: string
     *               }</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code>$listenerClassName</code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code><![CDATA[$metadata->getReflectionClass()]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>assert($cacheAttribute instanceof Mapping\Cache)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($property instanceof ReflectionProperty)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull>
      <code><![CDATA[new ReflectionClass($metadata->name)]]></code>
    </TypeDoesNotContainNull>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/DatabaseDriver.php">
    <DocblockTypeContradiction>
      <code>$metadata instanceof ClassMetadata</code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->namespace . $this->classNamesForTables[$tableName]]]></code>
      <code><![CDATA[$this->namespace . $this->inflector->classify(strtolower($tableName))]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>class-string</code>
    </MoreSpecificReturnType>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$this->tables[$tableName]]]></code>
      <code><![CDATA[$this->tables[$tableName]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference>
      <code>getColumns</code>
      <code>getColumns</code>
      <code>getIndexes</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/PHPDriver.php">
    <PropertyNotSetInConstructor>
      <code>PHPDriver</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.php">
    <MissingParamType>
      <code>$fileExtension</code>
      <code>$prefixes</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/SimplifiedYamlDriver.php">
    <MissingParamType>
      <code>$fileExtension</code>
      <code>$prefixes</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/XmlDriver.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[(string) $xmlRoot['repository-class']]]></code>
      <code><![CDATA[isset($xmlRoot['repository-class']) ? (string) $xmlRoot['repository-class'] : null]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code>$columnDef</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$metadata->table]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidPropertyFetch>
      <code><![CDATA[$indexXml->options]]></code>
      <code><![CDATA[$uniqueXml->options]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-column'}]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-map'}]]></code>
    </InvalidPropertyFetch>
    <InvalidReturnStatement>
      <code>$mapping</code>
      <code><![CDATA[[
            'usage'  => $usage,
            'region' => $region,
        ]]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>array{
      *                   fieldName: string,
      *                   type?: string,
      *                   columnName?: string,
      *                   length?: int,
      *                   precision?: int,
      *                   scale?: int,
      *                   unique?: bool,
      *                   nullable?: bool,
      *                   notInsertable?: bool,
      *                   notUpdatable?: bool,
      *                   enumType?: string,
      *                   version?: bool,
      *                   columnDefinition?: string,
      *                   options?: array
      *               }</code>
      <code>array{usage: int|null, region?: string}</code>
    </InvalidReturnType>
    <MissingParamType>
      <code>$fileExtension</code>
      <code>$locator</code>
    </MissingParamType>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <NoInterfaceProperties>
      <code><![CDATA[$indexXml->options]]></code>
      <code><![CDATA[$uniqueXml->options]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-column'}]]></code>
      <code><![CDATA[$xmlRoot->{'discriminator-map'}]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$joinColumnElement['options']->children()]]></code>
      <code><![CDATA[$option->children()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullIterator>
      <code><![CDATA[$cascadeElement->children()]]></code>
    </PossiblyNullIterator>
    <TypeDoesNotContainType>
      <code><![CDATA[$xmlRoot->getName() === 'embeddable']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'entity']]></code>
      <code><![CDATA[$xmlRoot->getName() === 'mapped-superclass']]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/YamlDriver.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[[
                            'name' => isset($discrColumn['name']) ? (string) $discrColumn['name'] : null,
                            'type' => isset($discrColumn['type']) ? (string) $discrColumn['type'] : 'string',
                            'length' => isset($discrColumn['length']) ? (int) $discrColumn['length'] : 255,
                            'columnDefinition' => isset($discrColumn['columnDefinition']) ? (string) $discrColumn['columnDefinition'] : null,
                            'enumType' => isset($discrColumn['enumType']) ? (string) $discrColumn['enumType'] : null,
                        ]]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <LessSpecificReturnStatement>
      <code><![CDATA[[
            'usage'  => $usage,
            'region' => $region,
        ]]]></code>
    </LessSpecificReturnStatement>
    <MissingParamType>
      <code>$fileExtension</code>
      <code>$locator</code>
    </MissingParamType>
    <MoreSpecificImplementedParamType>
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType>
      <code>array{usage: int|null, region: string|null}</code>
    </MoreSpecificReturnType>
    <PossiblyUndefinedMethod>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
    </PossiblyUndefinedMethod>
    <UndefinedInterfaceMethod>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Embedded.php">
    <MissingParamType>
      <code>$columnPrefix</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/EntityResult.php">
    <MissingConstructor>
      <code>$discriminatorColumn</code>
      <code>$entityClass</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/FieldResult.php">
    <MissingConstructor>
      <code>$column</code>
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/JoinColumns.php">
    <MissingConstructor>
      <code>$value</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/JoinTable.php">
    <MissingParamType>
      <code>$inverseJoinColumns</code>
      <code>$joinColumns</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/MappingException.php">
    <MissingParamType>
      <code>$className</code>
      <code>$className</code>
      <code>$indexName</code>
      <code>$indexName</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/NamedNativeQuery.php">
    <MissingConstructor>
      <code>$name</code>
      <code>$query</code>
      <code>$resultClass</code>
      <code>$resultSetMapping</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/NamedQueries.php">
    <MissingConstructor>
      <code>$value</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/NamedQuery.php">
    <MissingConstructor>
      <code>$name</code>
      <code>$query</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEmbeddedProperty.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->embeddedClass]]></code>
    </ArgumentTypeCoercion>
    <MissingParamType>
      <code>$object</code>
      <code>$object</code>
      <code>$value</code>
    </MissingParamType>
    <PropertyNotSetInConstructor>
      <code>ReflectionEmbeddedProperty</code>
      <code>ReflectionEmbeddedProperty</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(string) $embeddedClass</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEnumProperty.php">
    <PropertyNotSetInConstructor>
      <code>ReflectionEnumProperty</code>
      <code>ReflectionEnumProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionReadonlyProperty.php">
    <PropertyNotSetInConstructor>
      <code>ReflectionReadonlyProperty</code>
      <code>ReflectionReadonlyProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/SqlResultSetMapping.php">
    <MissingConstructor>
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/UnderscoreNamingStrategy.php">
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($className, '\\')]]></code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/NativeQuery.php">
    <PropertyNotSetInConstructor>
      <code>$sql</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/PersistentCollection.php">
    <ImplementedReturnTypeMismatch>
      <code><![CDATA[Collection<TKey, T>]]></code>
      <code>object|null</code>
      <code>object|null</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement>
      <code><![CDATA[$association['fetch'] === ClassMetadata::FETCH_EXTRA_LAZY
            ? new LazyCriteriaCollection($persister, $criteria)
            : new ArrayCollection($persister->loadCriteria($criteria))]]></code>
      <code><![CDATA[$this->em->find($this->typeClass->name, $key)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[Collection<TKey, T>]]></code>
    </InvalidReturnType>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->unwrap()->matching($criteria)]]></code>
    </LessSpecificReturnStatement>
    <MissingParamType>
      <code>$offset</code>
    </MissingParamType>
    <ParamNameMismatch>
      <code>$value</code>
      <code>$value</code>
    </ParamNameMismatch>
    <PossiblyNullArgument>
      <code><![CDATA[$this->backRefFieldName]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$association['orphanRemoval']]]></code>
      <code><![CDATA[$this->getMapping()['indexBy']]]></code>
      <code><![CDATA[$this->getMapping()['orphanRemoval']]]></code>
      <code><![CDATA[$this->getMapping()['orphanRemoval']]]></code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedMethod>
      <code><![CDATA[[$this->unwrap(), 'add']]]></code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/ManyToManyPersister.php">
    <InvalidArrayOffset>
      <code><![CDATA[[$mappedKey => $collection->getOwner(), $mapping['indexBy'] => $index]]]></code>
    </InvalidArrayOffset>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$associationSourceClass->associationMappings]]></code>
      <code><![CDATA[$sourceClass->associationMappings]]></code>
      <code><![CDATA[$targetClass->associationMappings]]></code>
      <code><![CDATA[$targetClass->associationMappings]]></code>
      <code><![CDATA[$targetClass->associationMappings]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>getFieldForColumn</code>
      <code>getFieldForColumn</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code>$mapping[$sourceRelationMode]</code>
      <code>$mapping[$targetRelationMode]</code>
      <code><![CDATA[$mapping['indexBy']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
      <code><![CDATA[$mapping['joinTableColumns']]]></code>
      <code><![CDATA[$mapping['joinTableColumns']]]></code>
      <code><![CDATA[$mapping['joinTableColumns']]]></code>
      <code><![CDATA[$mapping['joinTableColumns']]]></code>
      <code><![CDATA[$mapping['relationToSourceKeyColumns']]]></code>
      <code><![CDATA[$mapping['relationToSourceKeyColumns']]]></code>
      <code><![CDATA[$mapping['relationToSourceKeyColumns']]]></code>
      <code><![CDATA[$mapping['relationToTargetKeyColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/OneToManyPersister.php">
    <ImplementedReturnTypeMismatch>
      <code>int|null</code>
    </ImplementedReturnTypeMismatch>
    <InvalidArrayOffset>
      <code><![CDATA[[
                $mapping['mappedBy'] => $collection->getOwner(),
                $mapping['indexBy']  => $index,
            ]]]></code>
    </InvalidArrayOffset>
    <InvalidReturnStatement>
      <code>$numDeleted</code>
      <code><![CDATA[$this->conn->executeStatement($statement, $parameters)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$mapping['mappedBy']]]></code>
      <code><![CDATA[$mapping['mappedBy']]]></code>
      <code><![CDATA[$mapping['mappedBy']]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$targetClass->associationMappings]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$mapping['orphanRemoval']]]></code>
      <code><![CDATA[$targetClass->associationMappings[$mapping['mappedBy']]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/BasicEntityPersister.php">
    <ArgumentTypeCoercion>
      <code>$assoc</code>
      <code>$association</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction>
      <code>$value === null</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$assoc</code>
      <code><![CDATA[$em->getMetadataFactory()]]></code>
      <code>$hints</code>
      <code>$hints</code>
      <code><![CDATA[[Query::HINT_REFRESH => true]]]></code>
      <code><![CDATA[[UnitOfWork::HINT_DEFEREAGERLOAD => true]]]></code>
      <code><![CDATA[[UnitOfWork::HINT_DEFEREAGERLOAD => true]]]></code>
    </InvalidArgument>
    <InvalidNullableReturnType>
      <code>loadOneToOneEntity</code>
    </InvalidNullableReturnType>
    <LessSpecificReturnStatement>
      <code>$newValue</code>
      <code>[$params, $types]</code>
      <code>[$sqlParams, $sqlTypes]</code>
    </LessSpecificReturnStatement>
    <MissingReturnType>
      <code>loadAll</code>
    </MissingReturnType>
    <MoreSpecificReturnType>
      <code>expandCriteriaParameters</code>
      <code>expandParameters</code>
      <code><![CDATA[list<mixed>]]></code>
    </MoreSpecificReturnType>
    <NullableReturnStatement>
      <code>$targetEntity</code>
      <code>$targetEntity</code>
    </NullableReturnStatement>
    <PossiblyNullArgument>
      <code><![CDATA[$assoc['mappedBy']]]></code>
      <code><![CDATA[$assoc['mappedBy']]]></code>
      <code><![CDATA[$assoc['mappedBy']]]></code>
      <code>$association</code>
      <code>$type</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$assoc['isOwningSide']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']['inverseJoinColumns']]]></code>
      <code><![CDATA[$association['joinTable']['joinColumns']]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$class->associationMappings]]></code>
      <code><![CDATA[$class->associationMappings]]></code>
      <code><![CDATA[$targetEntity->associationMappings]]></code>
      <code><![CDATA[$this->class->associationMappings]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullIterator>
      <code>$joinColumns</code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['relationToTargetKeyColumns']]]></code>
      <code><![CDATA[$assoc['sourceToTargetKeyColumns']]]></code>
      <code><![CDATA[$association['joinColumns']]]></code>
      <code><![CDATA[$association['joinColumns']]]></code>
      <code><![CDATA[$association['joinColumns']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$association['joinTable']]]></code>
      <code><![CDATA[$owningAssoc['targetToSourceKeyColumns']]]></code>
      <code><![CDATA[$owningAssoc['targetToSourceKeyColumns']]]></code>
      <code><![CDATA[$this->class->associationMappings[$fieldName]['joinColumns']]]></code>
      <code><![CDATA[$this->class->associationMappings[$idField]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->currentPersisterContext->sqlTableAliases]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/CachedPersisterContext.php">
    <PropertyNotSetInConstructor>
      <code>$selectJoinSql</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code>$class</code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(bool) $handlesLimits</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/EntityPersister.php">
    <MissingReturnType>
      <code>loadAll</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/JoinedSubclassPersister.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['targetToSourceKeyColumns']]]></code>
      <code><![CDATA[$mapping['joinColumns']]]></code>
      <code><![CDATA[$mapping['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/SingleTablePersister.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUndefinedVariable>
      <code>$columnList</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="lib/Doctrine/ORM/Proxy/Proxy.php">
    <MissingTemplateParam>
      <code>BaseProxy</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ORM/Proxy/ProxyFactory.php">
    <ArgumentTypeCoercion>
      <code>$classMetadata</code>
      <code>$classMetadata</code>
      <code>$classMetadata</code>
    </ArgumentTypeCoercion>
    <InvalidArgument>
      <code><![CDATA[$classMetadata->getReflectionProperties()]]></code>
      <code><![CDATA[$em->getMetadataFactory()]]></code>
      <code><![CDATA[$em->getMetadataFactory()]]></code>
    </InvalidArgument>
    <NoInterfaceProperties>
      <code><![CDATA[$metadata->isEmbeddedClass]]></code>
      <code><![CDATA[$metadata->isMappedSuperclass]]></code>
      <code><![CDATA[$proxy->__isCloning]]></code>
    </NoInterfaceProperties>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$property->name]]></code>
      <code><![CDATA[$property->name]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>setAccessible</code>
      <code>setAccessible</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod>
      <code>__wakeup</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query.php">
    <DeprecatedClass>
      <code>IterableResult</code>
    </DeprecatedClass>
    <DeprecatedMethod>
      <code>parent::iterate($parameters, $hydrationMode)</code>
    </DeprecatedMethod>
    <InvalidArgument>
      <code>$sqlParams</code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->parse()->getSqlExecutor()->getSqlStatements()]]></code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[list<string>|string]]></code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getDQL()]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>evictEntityRegion</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor>
      <code>$parserResult</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ArithmeticFactor.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ArithmeticTerm.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/BetweenExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/CoalesceExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ComparisonExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalFactor.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalPrimary.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalTerm.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/DeleteClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/DeleteStatement.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ExistsExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/FromClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/AbsFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitAndFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitOrFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateAddFunction.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
    </ArgumentTypeCoercion>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
      <code>null</code>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <UndefinedPropertyFetch>
      <code><![CDATA[$this->unit->value]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateDiffFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
      <code><![CDATA[$parser->ArithmeticPrimary()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateSubFunction.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
      <code><![CDATA[$this->intervalExpression->dispatch($sqlWalker)]]></code>
    </ArgumentTypeCoercion>
    <UndefinedPropertyFetch>
      <code><![CDATA[$this->unit->value]]></code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/FunctionNode.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/IdentityFunction.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LengthFunction.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->stringPrimary]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LocateFunction.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->simpleArithmeticExpression]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LowerFunction.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->stringPrimary]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/ModFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SizeFunction.php">
    <PossiblyNullArrayOffset>
      <code><![CDATA[$targetClass->associationMappings]]></code>
      <code><![CDATA[$targetClass->associationMappings]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$owningAssoc['joinTable']]]></code>
      <code><![CDATA[$owningAssoc['targetToSourceKeyColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SqrtFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SubstringFunction.php">
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
      <code><![CDATA[$parser->SimpleArithmeticExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/UpperFunction.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->stringPrimary]]></code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/GeneralCaseExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/GroupByClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/HavingClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/InExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/IndexBy.php">
    <DeprecatedProperty>
      <code><![CDATA[$this->simpleStateFieldPathExpression]]></code>
    </DeprecatedProperty>
    <InvalidNullableReturnType>
      <code>dispatch</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$sqlWalker->walkIndexBy($this)]]></code>
    </NullableReturnStatement>
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/InstanceOfExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Join.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinAssociationDeclaration.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinClassPathExpression.php">
    <UndefinedMethod>
      <code>walkJoinPathExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinVariableDeclaration.php">
    <UndefinedMethod>
      <code>walkJoinVariableDeclaration</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/LikeExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/NewObjectExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Node.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/NullComparisonExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/NullIfExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/OrderByClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/OrderByItem.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/QuantifiedExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SelectClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SelectExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SelectStatement.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleArithmeticExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleCaseExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleSelectClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleSelectExpression.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleWhenClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <UndefinedMethod>
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Subselect.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SubselectFromClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/UpdateClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/UpdateItem.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/UpdateStatement.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/WhenClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <UndefinedMethod>
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/WhereClause.php">
    <ParamNameMismatch>
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/AbstractSqlExecutor.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.php">
    <InvalidReturnStatement>
      <code>$numDeleted</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor>
      <code>MultiTableDeleteExecutor</code>
      <code>MultiTableDeleteExecutor</code>
    </PropertyNotSetInConstructor>
    <UninitializedProperty>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.php">
    <InvalidReturnStatement>
      <code>$numUpdated</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor>
      <code>MultiTableUpdateExecutor</code>
      <code>MultiTableUpdateExecutor</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </PropertyTypeCoercion>
    <UninitializedProperty>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleSelectExecutor.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor>
      <code>SingleSelectExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.php">
    <InvalidReturnStatement>
      <code><![CDATA[$conn->executeStatement($this->_sqlStatements, $params, $types)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$this->_sqlStatements]]></code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor>
      <code>SingleTableDeleteUpdateExecutor</code>
      <code>SingleTableDeleteUpdateExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr.php">
    <MissingParamType>
      <code>$y</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Andx.php">
    <NonInvariantDocblockPropertyType>
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Base.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Comparison.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Composite.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <PossiblyInvalidCast>
      <code>$part</code>
    </PossiblyInvalidCast>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/From.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Func.php">
    <LessSpecificReturnStatement>
      <code><![CDATA[$this->arguments]]></code>
    </LessSpecificReturnStatement>
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <MoreSpecificReturnType>
      <code><![CDATA[list<mixed>]]></code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/GroupBy.php">
    <NonInvariantDocblockPropertyType>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Join.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->conditionType]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Literal.php">
    <NonInvariantDocblockPropertyType>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Math.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/OrderBy.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Orx.php">
    <NonInvariantDocblockPropertyType>
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Select.php">
    <NonInvariantDocblockPropertyType>
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Filter/SQLFilter.php">
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <MissingClosureParamType>
      <code>$value</code>
    </MissingClosureParamType>
    <MissingClosureReturnType>
      <code>static function ($value) use ($connection, $param) {</code>
    </MissingClosureReturnType>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->parameters]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/ParameterTypeInferer.php">
    <DeprecatedConstant>
      <code>Connection::PARAM_INT_ARRAY</code>
      <code>Connection::PARAM_STR_ARRAY</code>
    </DeprecatedConstant>
  </file>
  <file src="lib/Doctrine/ORM/Query/Parser.php">
    <ArgumentTypeCoercion>
      <code>$stringPattern</code>
    </ArgumentTypeCoercion>
    <InvalidNullableReturnType>
      <code>AST\SelectStatement|AST\UpdateStatement|AST\DeleteStatement</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->queryComponents]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement>
      <code>$factors[0]</code>
      <code>$primary</code>
      <code>$terms[0]</code>
      <code><![CDATA[$this->CollectionMemberExpression()]]></code>
      <code><![CDATA[$this->ComparisonExpression()]]></code>
      <code><![CDATA[$this->EmptyCollectionComparisonExpression()]]></code>
      <code><![CDATA[$this->ExistsExpression()]]></code>
      <code><![CDATA[$this->InExpression()]]></code>
      <code><![CDATA[$this->InstanceOfExpression()]]></code>
      <code><![CDATA[$this->LikeExpression()]]></code>
      <code><![CDATA[$this->NullComparisonExpression()]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>AST\ArithmeticFactor</code>
      <code>AST\ArithmeticTerm</code>
      <code>AST\BetweenExpression|</code>
      <code>AST\SimpleArithmeticExpression|AST\ArithmeticTerm</code>
    </InvalidReturnType>
    <InvalidStringClass>
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code>$function</code>
      <code>$function</code>
      <code>$function</code>
    </LessSpecificReturnStatement>
    <NullableReturnStatement>
      <code>$statement</code>
    </NullableReturnStatement>
    <PossiblyFalseArgument>
      <code><![CDATA[strrpos($fromClassName, '\\')]]></code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument>
      <code>$AST</code>
      <code>$conditionalExpression</code>
      <code>$expr</code>
      <code>$pathExp</code>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->lexer->getLiteral($token)]]></code>
      <code><![CDATA[$this->lexer->getLiteral($token)]]></code>
      <code><![CDATA[$this->lexer->getLiteral($token)]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->ConditionalExpression()]]></code>
      <code><![CDATA[$this->SimpleArithmeticExpression()]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArgument>
      <code>$dql</code>
      <code><![CDATA[$this->query->getDQL()]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$this->lexer->glimpse()->type]]></code>
      <code><![CDATA[$token->value]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyUndefinedVariable>
      <code>$args</code>
    </PossiblyUndefinedVariable>
    <RedundantConditionGivenDocblockType>
      <code>$AST instanceof AST\SelectStatement</code>
      <code>$token === Lexer::T_IDENTIFIER</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/ParserResult.php">
    <PropertyNotSetInConstructor>
      <code>$sqlExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/QueryExpressionVisitor.php">
    <InvalidReturnStatement>
      <code><![CDATA[new ArrayCollection($this->parameters)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[ArrayCollection<int, mixed>]]></code>
    </InvalidReturnType>
    <RedundantConditionGivenDocblockType>
      <code>Comparison::EQ</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/ResultSetMappingBuilder.php">
    <ArgumentTypeCoercion>
      <code>$class</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>addNamedNativeQueryEntityResultMapping</code>
      <code>addNamedNativeQueryEntityResultMapping</code>
      <code>addNamedNativeQueryResultClassMapping</code>
      <code>addNamedNativeQueryResultSetMapping</code>
    </DeprecatedMethod>
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$associationMapping['joinColumns']]]></code>
      <code><![CDATA[$associationMapping['joinColumns']]]></code>
      <code><![CDATA[$associationMapping['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/SqlWalker.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
      <code>is_string($expression)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </ImplementedReturnTypeMismatch>
    <ImplicitToStringCast>
      <code>$expr</code>
    </ImplicitToStringCast>
    <InvalidArgument>
      <code>$condExpr</code>
      <code>$condTerm</code>
      <code>$factor</code>
    </InvalidArgument>
    <InvalidNullableReturnType>
      <code>string</code>
    </InvalidNullableReturnType>
    <MoreSpecificImplementedParamType>
      <code>$query</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument>
      <code><![CDATA[$aggExpression->pathExpression]]></code>
      <code><![CDATA[$whereClause->conditionalExpression]]></code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument>
      <code><![CDATA[$AST->whereClause]]></code>
      <code><![CDATA[$AST->whereClause]]></code>
      <code><![CDATA[$AST->whereClause]]></code>
      <code><![CDATA[$arithmeticExpr->simpleArithmeticExpression]]></code>
      <code><![CDATA[$arithmeticExpr->subselect]]></code>
      <code>$condExpr</code>
      <code><![CDATA[$identificationVariableDecl->rangeVariableDeclaration]]></code>
      <code><![CDATA[$subselect->whereClause]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$targetClass->associationMappings]]></code>
      <code><![CDATA[$targetClass->associationMappings]]></code>
      <code><![CDATA[$targetClass->associationMappings]]></code>
      <code><![CDATA[$this->scalarResultAliasMap]]></code>
      <code><![CDATA[$this->scalarResultAliasMap]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>dispatch</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['joinTable']]]></code>
      <code><![CDATA[$assoc['sourceToTargetKeyColumns']]]></code>
      <code><![CDATA[$assoc['targetToSourceKeyColumns']]]></code>
      <code><![CDATA[$association['sourceToTargetKeyColumns']]]></code>
      <code><![CDATA[$association['targetToSourceKeyColumns']]]></code>
      <code><![CDATA[$owningAssoc['joinTable']]]></code>
      <code><![CDATA[$owningAssoc['targetToSourceKeyColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType>
      <code>$whereClause !== null</code>
      <code><![CDATA[($factor->not ? 'NOT ' : '') . $this->walkConditionalPrimary($factor->conditionalPrimary)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/TreeWalkerAdapter.php">
    <InvalidNullableReturnType>
      <code>getExecutor</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code>null</code>
    </NullableReturnStatement>
  </file>
  <file src="lib/Doctrine/ORM/Query/TreeWalkerChain.php">
    <InvalidNullableReturnType>
      <code>getExecutor</code>
    </InvalidNullableReturnType>
    <MissingParamType>
      <code>$dqlAlias</code>
    </MissingParamType>
    <NullableReturnStatement>
      <code>null</code>
    </NullableReturnStatement>
    <ParamNameMismatch>
      <code>$condPrimary</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/TreeWalkerChainIterator.php">
    <ImplementedParamTypeMismatch>
      <code>$value</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch>
      <code>TreeWalker|null</code>
      <code><![CDATA[class-string<TreeWalker>|false]]></code>
    </ImplementedReturnTypeMismatch>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$this->walkers]]></code>
    </PossiblyNullArrayOffset>
    <PropertyTypeCoercion>
      <code><![CDATA[$this->walkers]]></code>
      <code><![CDATA[$this->walkers]]></code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/QueryBuilder.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[[$rootAlias => $join]]]></code>
      <code><![CDATA[[$rootAlias => $join]]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>getRootAlias</code>
      <code>getRootAlias</code>
    </DeprecatedMethod>
    <FalsableReturnStatement>
      <code><![CDATA[! $filteredParameters->isEmpty() ? $filteredParameters->first() : null]]></code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType>
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <InvalidPropertyAssignmentValue>
      <code>new ArrayCollection($parameters)</code>
    </InvalidPropertyAssignmentValue>
    <MethodSignatureMustProvideReturnType>
      <code>__toString</code>
    </MethodSignatureMustProvideReturnType>
    <PossiblyFalseArgument>
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand>
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseOperand>
    <PossiblyInvalidIterator>
      <code>$dqlPart</code>
    </PossiblyInvalidIterator>
    <PossiblyNullArgument>
      <code>$alias</code>
      <code>$alias</code>
    </PossiblyNullArgument>
    <RedundantConditionGivenDocblockType>
      <code>self::SELECT</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Repository/DefaultRepositoryFactory.php">
    <InvalidReturnStatement>
      <code><![CDATA[$this->repositoryList[$repositoryHash]]]></code>
      <code><![CDATA[$this->repositoryList[$repositoryHash] = $this->createRepository($entityManager, $entityName)]]></code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>ObjectRepository</code>
    </InvalidReturnType>
    <TypeDoesNotContainType>
      <code>$repository instanceof EntityRepository</code>
    </TypeDoesNotContainType>
    <UnsafeInstantiation>
      <code>new $repositoryClassName($entityManager, $metadata)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/CollectionRegionCommand.php">
    <PossiblyNullReference>
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/EntityRegionCommand.php">
    <PossiblyNullReference>
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.php">
    <DeprecatedMethod>
      <code>getQueryCacheImpl</code>
    </DeprecatedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.php">
    <ArgumentTypeCoercion>
      <code>$fromPaths</code>
      <code>$metadata</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>ClassMetadataExporter</code>
      <code>ClassMetadataExporter</code>
      <code>ClassMetadataExporter|null</code>
      <code>EntityGenerator</code>
      <code>EntityGenerator</code>
      <code>EntityGenerator|null</code>
      <code>new ClassMetadataExporter()</code>
      <code>new ConvertDoctrine1Schema($fromPaths)</code>
      <code>new EntityGenerator()</code>
      <code>private $entityGenerator = null;</code>
      <code>private $metadataExporter = null;</code>
    </DeprecatedClass>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadata</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>AbstractExporter</code>
      <code>new ClassMetadataExporter()</code>
      <code>new DisconnectedClassMetadataFactory()</code>
      <code>new EntityGenerator()</code>
    </DeprecatedClass>
    <NoInterfaceProperties>
      <code><![CDATA[$class->name]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.php">
    <InvalidDocblock>
      <code>connect</code>
    </InvalidDocblock>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>new DisconnectedClassMetadataFactory()</code>
      <code>new EntityGenerator()</code>
    </DeprecatedClass>
    <NoInterfaceProperties>
      <code><![CDATA[$metadata->name]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.php">
    <NoInterfaceProperties>
      <code><![CDATA[$metadata->name]]></code>
    </NoInterfaceProperties>
    <PossiblyNullArgument>
      <code><![CDATA[$em->getConfiguration()->getProxyDir()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.php">
    <DeprecatedClass>
      <code>new EntityRepositoryGenerator()</code>
    </DeprecatedClass>
    <NoInterfaceProperties>
      <code><![CDATA[$metadata->customRepositoryClassName]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/InfoCommand.php">
    <PossiblyNullReference>
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/MappingDescribeCommand.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$metadata->entityListeners]]></code>
    </ArgumentTypeCoercion>
    <PossiblyNullReference>
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/RunDqlCommand.php">
    <DeprecatedClass>
      <code><![CDATA[Debug::dump($resultSet, (int) $input->getOption('depth'), true, false)]]></code>
    </DeprecatedClass>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.php">
    <InvalidNullableReturnType>
      <code>int</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement>
      <code><![CDATA[$this->executeSchemaCommand($input, $output, new SchemaTool($em), $metadatas, $ui)]]></code>
    </NullableReturnStatement>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
      <code>$metadatas</code>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getName()]]></code>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.php">
    <ArgumentTypeCoercion>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument>
      <code><![CDATA[$this->getName()]]></code>
      <code><![CDATA[$this->getName()]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/MetadataFilter.php">
    <InvalidArgument>
      <code>new ArrayIterator($metadatas)</code>
    </InvalidArgument>
    <MissingTemplateParam>
      <code>MetadataFilter</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ORM/Tools/ConvertDoctrine1Schema.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$column['type']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/DebugUnitOfWorkListener.php">
    <RedundantConditionGivenDocblockType>
      <code>$state === UnitOfWork::STATE_DETACHED</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/EntityGenerator.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$this->getClassToExtend()]]></code>
      <code><![CDATA[$this->getClassToExtend() ?: $metadata->name]]></code>
      <code><![CDATA[$this->getClassToExtend() ?: $metadata->name]]></code>
      <code><![CDATA[array_map('strlen', $paramTypes)]]></code>
    </ArgumentTypeCoercion>
    <InvalidArrayOffset>
      <code>$tokens[$i - 1]</code>
    </InvalidArrayOffset>
    <PossiblyFalseArgument>
      <code>$last</code>
      <code><![CDATA[strrpos($metadata->name, '\\')]]></code>
    </PossiblyFalseArgument>
    <PossiblyNullArgument>
      <code>$variableType</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor>
      <code>$classToExtend</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType>
      <code>(bool) $embeddablesImmutable</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[isset($metadata->lifecycleCallbacks)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/EntityRepositoryGenerator.php">
    <ArgumentTypeCoercion>
      <code>$fullClassName</code>
      <code>$fullClassName</code>
      <code>$fullClassName</code>
    </ArgumentTypeCoercion>
    <PossiblyFalseOperand>
      <code><![CDATA[strrpos($fullClassName, '\\')]]></code>
    </PossiblyFalseOperand>
    <PropertyTypeCoercion>
      <code>$repositoryName</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/ClassMetadataExporter.php">
    <DeprecatedClass>
      <code>Driver\AbstractExporter</code>
      <code>Driver\AnnotationExporter::class</code>
      <code>Driver\PhpExporter::class</code>
      <code>Driver\XmlExporter::class</code>
      <code>Driver\YamlExporter::class</code>
      <code>Driver\YamlExporter::class</code>
      <code>ExportException::invalidExporterDriverType($type)</code>
    </DeprecatedClass>
    <InvalidStringClass>
      <code>new $class($dest)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement>
      <code>new $class($dest)</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code>Driver\AbstractExporter</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/AbstractExporter.php">
    <DeprecatedClass>
      <code>ExportException::attemptOverwriteExistingFile($path)</code>
    </DeprecatedClass>
    <InvalidNullableReturnType>
      <code>string</code>
    </InvalidNullableReturnType>
    <PossiblyNullArgument>
      <code><![CDATA[$this->_outputDir]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.php">
    <DeprecatedClass>
      <code>AbstractExporter</code>
      <code>EntityGenerator</code>
      <code>EntityGenerator|null</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType>
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/PhpExporter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$metadata->changeTrackingPolicy]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>AbstractExporter</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType>
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$associationMapping['joinColumns']]]></code>
      <code><![CDATA[$associationMapping['orphanRemoval']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$metadata->table]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/XmlExporter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$metadata->changeTrackingPolicy]]></code>
      <code><![CDATA[$simpleXml->asXML()]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>AbstractExporter</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType>
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyFalseArgument>
      <code><![CDATA[$simpleXml->asXML()]]></code>
    </PossiblyFalseArgument>
    <RedundantCondition>
      <code><![CDATA[$field['associationKey']]]></code>
      <code><![CDATA[isset($field['associationKey']) && $field['associationKey']]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[isset($metadata->lifecycleCallbacks)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/YamlExporter.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$metadata->changeTrackingPolicy]]></code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code>AbstractExporter</code>
    </DeprecatedClass>
    <DocblockTypeContradiction>
      <code><![CDATA[['name' => null]]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$array</code>
    </InvalidArgument>
    <LessSpecificReturnStatement>
      <code>$array</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType>
      <code><![CDATA[array<string, mixed>&array{entityListeners: array<class-string, array<string, array{string}>>}]]></code>
    </MoreSpecificReturnType>
    <NonInvariantDocblockPropertyType>
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$associationMapping['joinColumns']]]></code>
      <code><![CDATA[$associationMapping['orphanRemoval']]]></code>
      <code><![CDATA[$associationMapping['orphanRemoval']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$metadata->table]]></code>
      <code><![CDATA[isset($metadata->lifecycleCallbacks)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/CountOutputWalker.php">
    <MoreSpecificImplementedParamType>
      <code>$query</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$rootClass->associationMappings[$property]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.php">
    <MoreSpecificImplementedParamType>
      <code>$query</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseArgument>
      <code><![CDATA[strrpos($orderByItemString, ' ')]]></code>
    </PossiblyFalseArgument>
    <PossiblyNullIterator>
      <code><![CDATA[$orderByClause->orderByItems]]></code>
    </PossiblyNullIterator>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$AST->orderByClause]]></code>
      <code><![CDATA[$query->getMaxResults()]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$orderByClause->orderByItems]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$rootClass->associationMappings[$property]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/Paginator.php">
    <ArgumentTypeCoercion>
      <code>$parameters</code>
    </ArgumentTypeCoercion>
    <RedundantCastGivenDocblockType>
      <code>(bool) $fetchJoinCollection</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/RowNumberOverFunction.php">
    <PropertyNotSetInConstructor>
      <code>$orderByClause</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/WhereInWalker.php">
    <DocblockTypeContradiction>
      <code><![CDATA[$AST->whereClause->conditionalExpression instanceof ConditionalExpression
                || $AST->whereClause->conditionalExpression instanceof ConditionalFactor]]></code>
      <code><![CDATA[$AST->whereClause->conditionalExpression instanceof ConditionalFactor]]></code>
      <code><![CDATA[$AST->whereClause->conditionalExpression instanceof ConditionalPrimary]]></code>
    </DocblockTypeContradiction>
    <PossiblyInvalidPropertyAssignmentValue>
      <code><![CDATA[$AST->whereClause->conditionalExpression]]></code>
    </PossiblyInvalidPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$AST->whereClause->conditionalExpression instanceof ConditionalExpression
                || $AST->whereClause->conditionalExpression instanceof ConditionalFactor]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaTool.php">
    <ArgumentTypeCoercion>
      <code>$classes</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod>
      <code>canEmulateSchemas</code>
    </DeprecatedMethod>
    <MissingClosureParamType>
      <code>$asset</code>
    </MissingClosureParamType>
    <PossiblyNullArgument>
      <code>$referencedFieldName</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$class->getAssociationMapping($fieldName)['joinColumns']]]></code>
      <code><![CDATA[$fieldMapping['precision']]]></code>
      <code><![CDATA[$fieldMapping['scale']]]></code>
      <code><![CDATA[$idMapping['joinColumns']]]></code>
      <code><![CDATA[$mapping['joinColumns']]]></code>
      <code><![CDATA[$mapping['joinTable']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCondition>
      <code>is_numeric($indexName)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>assert(is_array($assoc))</code>
      <code>is_array($assoc)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType>
      <code>$indexName</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaValidator.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['joinTable']]]></code>
      <code><![CDATA[$assoc['relationToSourceKeyColumns']]]></code>
      <code><![CDATA[$assoc['relationToTargetKeyColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[$assoc['orderBy'] !== null]]></code>
      <code><![CDATA[isset($assoc['orderBy']) && $assoc['orderBy'] !== null]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Setup.php">
    <ArgumentTypeCoercion>
      <code>$paths</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass>
      <code><![CDATA[new ClassLoader('Doctrine', $directory)]]></code>
      <code><![CDATA[new ClassLoader('Symfony\Component', $directory . '/Doctrine')]]></code>
    </DeprecatedClass>
    <UnresolvableInclude>
      <code><![CDATA[require_once $directory . '/Doctrine/Common/ClassLoader.php']]></code>
      <code><![CDATA[require_once dirname($directory) . '/src/ClassLoader.php']]></code>
    </UnresolvableInclude>
  </file>
  <file src="lib/Doctrine/ORM/UnitOfWork.php">
    <DocblockTypeContradiction>
      <code>! is_object($object)</code>
      <code>is_object($object)</code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code>$collectionToDelete</code>
      <code>$collectionToUpdate</code>
      <code><![CDATA[$em->getMetadataFactory()]]></code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$this->entityChangeSets]]></code>
      <code><![CDATA[$this->entityChangeSets]]></code>
    </InvalidPropertyAssignmentValue>
    <MissingParamType>
      <code>$managedCopy</code>
      <code>$prevManagedCopy</code>
      <code>$previousManagedCopy</code>
    </MissingParamType>
    <NoValue>
      <code>$entityState</code>
      <code>$entityState</code>
    </NoValue>
    <PossiblyInvalidArgument>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidArrayOffset>
      <code><![CDATA[$this->identityMap[$rootClassName]]]></code>
    </PossiblyInvalidArrayOffset>
    <PossiblyNullArgument>
      <code>$assoc</code>
      <code>$assoc</code>
      <code><![CDATA[$class->getTypeOfField($class->getSingleIdentifierFieldName())]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code><![CDATA[$collection->getOwner()]]></code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$class->reflFields]]></code>
      <code><![CDATA[$targetClass->reflFields]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>buildCachedCollectionPersister</code>
      <code>buildCachedEntityPersister</code>
      <code>getCacheFactory</code>
      <code>getCacheFactory</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinColumns']]]></code>
      <code><![CDATA[$assoc['orphanRemoval']]]></code>
      <code><![CDATA[$assoc['targetToSourceKeyColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUndefinedMethod>
      <code>unwrap</code>
      <code>unwrap</code>
      <code>unwrap</code>
    </PossiblyUndefinedMethod>
    <RedundantCondition>
      <code><![CDATA[$i >= 0 && $this->entityDeletions]]></code>
      <code><![CDATA[$this->entityDeletions]]></code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code>is_array($entity)</code>
    </RedundantConditionGivenDocblockType>
    <ReferenceConstraintViolation>
      <code>$visited</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Utility/HierarchyDiscriminatorResolver.php">
    <NoInterfaceProperties>
      <code><![CDATA[$rootClassMetadata->name]]></code>
      <code><![CDATA[$rootClassMetadata->subClasses]]></code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Utility/IdentifierFlattener.php">
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$class->associationMappings[$field]['joinColumns']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Utility/PersisterHelper.php">
    <PossiblyNullArgument>
      <code><![CDATA[$assoc['mappedBy']]]></code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[$assoc['joinTable']]]></code>
    </PossiblyUndefinedArrayOffset>
  </file>
</files>
