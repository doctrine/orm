<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="4.27.0@faf106e717c37b8c81721845dba9de3d8deed8ff">
  <file src="lib/Doctrine/ORM/AbstractQuery.php">
    <DeprecatedClass occurrences="1">
      <code>IterableResult</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="1">
      <code>iterate</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="1">
      <code>in_array($fetchMode, [Mapping\ClassMetadata::FETCH_EAGER, Mapping\ClassMetadata::FETCH_LAZY], true)</code>
    </DocblockTypeContradiction>
    <FalsableReturnStatement occurrences="1">
      <code>! $filteredParameters-&gt;isEmpty() ? $filteredParameters-&gt;first() : null</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <InvalidNullableReturnType occurrences="1">
      <code>\Doctrine\Common\Cache\Cache</code>
    </InvalidNullableReturnType>
    <MissingClosureParamType occurrences="3">
      <code>$alias</code>
      <code>$data</code>
      <code>$data</code>
    </MissingClosureParamType>
    <NullableReturnStatement occurrences="2">
      <code>$this-&gt;_em-&gt;getConfiguration()-&gt;getResultCacheImpl()</code>
      <code>$this-&gt;_queryCacheProfile-&gt;getResultCacheDriver()</code>
    </NullableReturnStatement>
    <PossiblyInvalidArgument occurrences="2">
      <code>$stmt</code>
      <code>$stmt</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference occurrences="2">
      <code>getCacheLogger</code>
      <code>getQueryCache</code>
    </PossiblyNullReference>
    <RedundantCastGivenDocblockType occurrences="4">
      <code>(bool) $cacheable</code>
      <code>(int) $cacheMode</code>
      <code>(int) $lifetime</code>
      <code>(string) $cacheRegion</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/CacheConfiguration.php">
    <PossiblyNullReference occurrences="1">
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/CollectionCacheKey.php">
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(string) $association</code>
      <code>(string) $entityClass</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCache.php">
    <InvalidOperand occurrences="1">
      <code>! $association['type']</code>
    </InvalidOperand>
    <PossiblyNullPropertyAssignmentValue occurrences="1"/>
    <PossiblyNullReference occurrences="1">
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCacheFactory.php">
    <InvalidNullableReturnType occurrences="1">
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;fileLockRegionDirectory</code>
    </NullableReturnStatement>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $fileLockRegionDirectory</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultEntityHydrator.php">
    <InvalidArgument occurrences="1">
      <code>$em-&gt;getMetadataFactory()</code>
    </InvalidArgument>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClassMetadata-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$assoc['joinColumnFieldNames']</code>
      <code>$assoc['targetToSourceKeyColumns']</code>
      <code>$owningAssociation['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getCacheRegion</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultQueryCache.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>$assocKeys-&gt;identifiers[$assocIndex]</code>
      <code>$assocKeys-&gt;identifiers[$assocIndex]</code>
      <code>$cacheKeys-&gt;identifiers[$index]</code>
      <code>$cacheKeys-&gt;identifiers[$index]</code>
    </ArgumentTypeCoercion>
    <MissingClosureParamType occurrences="1">
      <code>$id</code>
    </MissingClosureParamType>
    <NoInterfaceProperties occurrences="2">
      <code>$assocEntry-&gt;class</code>
      <code>$assocEntry-&gt;class</code>
    </NoInterfaceProperties>
    <PossiblyNullReference occurrences="1">
      <code>getCacheLogger</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assert($cm instanceof ClassMetadata)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="5">
      <code>getCacheRegion</code>
      <code>resolveAssociationEntries</code>
      <code>resolveAssociationEntries</code>
      <code>storeEntityCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/AbstractCollectionPersister.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$cache</code>
      <code>$entityKey</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties occurrences="1">
      <code>$entry-&gt;identifiers</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>buildCollectionHydrator</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/NonStrictReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadOnlyCachedCollectionPersister.php">
    <PossiblyNullArgument occurrences="1">
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
    <UndefinedInterfaceMethod occurrences="2">
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/AbstractEntityPersister.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$cacheEntry</code>
    </ArgumentTypeCoercion>
    <MissingReturnType occurrences="1">
      <code>loadAll</code>
    </MissingReturnType>
    <NoInterfaceProperties occurrences="1">
      <code>$cacheEntry-&gt;class</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$em-&gt;getCache()</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference occurrences="2">
      <code>getCacheFactory</code>
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assert($metadata instanceof ClassMetadata)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="9">
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>loadCollectionCache</code>
      <code>loadCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/ReadWriteCachedEntityPersister.php">
    <RedundantCondition occurrences="1">
      <code>$isChanged</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod occurrences="2">
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Region/DefaultRegion.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$this-&gt;cache</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>CacheProvider</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/RegionsConfiguration.php">
    <RedundantCastGivenDocblockType occurrences="6">
      <code>(int) $defaultLifetime</code>
      <code>(int) $defaultLifetime</code>
      <code>(int) $defaultLockLifetime</code>
      <code>(int) $defaultLockLifetime</code>
      <code>(int) $lifetime</code>
      <code>(int) $lifetime</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampCacheEntry.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(float) $time</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampCacheKey.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $space</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampQueryCacheValidator.php">
    <NoInterfaceProperties occurrences="1">
      <code>$timestamp-&gt;time</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Configuration.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$className</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="2">
      <code>new CachedReader($reader, new ArrayCache())</code>
      <code>new SimpleAnnotationReader()</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="3">
      <code>AnnotationRegistry::registerFile(__DIR__ . '/Mapping/Driver/DoctrineAnnotations.php')</code>
      <code>getMetadataCacheImpl</code>
      <code>getQueryCacheImpl</code>
    </DeprecatedMethod>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $flag</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Decorator/EntityManagerDecorator.php">
    <DeprecatedMethod occurrences="4">
      <code>copy</code>
      <code>getHydrator</code>
      <code>transactional</code>
      <code>transactional</code>
    </DeprecatedMethod>
    <MissingParamType occurrences="3">
      <code>$entity</code>
      <code>$lockMode</code>
      <code>$lockVersion</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>wrapInTransaction</code>
    </MissingReturnType>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$className</code>
    </MoreSpecificImplementedParamType>
    <TooManyArguments occurrences="2">
      <code>find</code>
      <code>flush</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ORM/EntityManager.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$className</code>
      <code>$connection</code>
      <code>$entityName</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="2">
      <code>getMetadataCacheImpl</code>
      <code>merge</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="6">
      <code>$entityName !== null &amp;&amp; ! is_string($entityName)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
      <code>is_object($entity)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>ClassMetadataFactory</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="9">
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity instanceof $class-&gt;name ? $entity : null</code>
      <code>$entity instanceof $class-&gt;name ? $entity : null</code>
      <code>$persister-&gt;load($sortedId, null, null, [], $lockMode)</code>
      <code>$persister-&gt;loadById($sortedId)</code>
      <code>$this-&gt;metadataFactory-&gt;getMetadataFor($className)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="4">
      <code>?T</code>
      <code>getClassMetadata</code>
      <code>getPartialReference</code>
      <code>getReference</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="1">
      <code>wrapInTransaction</code>
    </MissingReturnType>
    <ParamNameMismatch occurrences="6">
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entityName</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="2">
      <code>$config-&gt;getProxyDir()</code>
      <code>$config-&gt;getProxyNamespace()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>createCache</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion occurrences="1">
      <code>new $metadataFactoryClassName()</code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $hydrationMode</code>
    </RedundantCastGivenDocblockType>
    <RedundantCondition occurrences="1">
      <code>is_object($connection)</code>
    </RedundantCondition>
    <TypeDoesNotContainType occurrences="1">
      <code>': "' . $connection . '"'</code>
    </TypeDoesNotContainType>
    <UnsafeInstantiation occurrences="1">
      <code>new $class($this)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/EntityRepository.php">
    <DeprecatedMethod occurrences="1">
      <code>addNamedNativeQueryMapping</code>
    </DeprecatedMethod>
    <InvalidReturnStatement occurrences="2">
      <code>$persister-&gt;load($criteria, null, null, [], null, 1, $orderBy)</code>
      <code>new LazyCriteriaCollection($persister, $criteria)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="2">
      <code>?T</code>
      <code>AbstractLazyCollection&lt;int, T&gt;&amp;Selectable&lt;int, T&gt;</code>
    </InvalidReturnType>
    <TooManyArguments occurrences="1">
      <code>find</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ORM/Event/OnClassMetadataNotFoundEventArgs.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $className</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Exception/ORMException.php">
    <DeprecatedClass occurrences="1">
      <code>BaseORMException</code>
    </DeprecatedClass>
  </file>
  <file src="lib/Doctrine/ORM/Id/AssignedGenerator.php">
    <PossiblyNullArgument occurrences="1">
      <code>$entity</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Id/TableGenerator.php">
    <PossiblyFalseOperand occurrences="3">
      <code>$currentLevel</code>
      <code>$this-&gt;_nextValue</code>
      <code>$this-&gt;_nextValue</code>
    </PossiblyFalseOperand>
    <UndefinedMethod occurrences="2">
      <code>getTableHiLoCurrentValSql</code>
      <code>getTableHiLoUpdateNextValSql</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Internal/CommitOrderCalculator.php">
    <RedundantCondition occurrences="2">
      <code>$vertex-&gt;state !== self::VISITED</code>
      <code>$vertex-&gt;state !== self::VISITED</code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/AbstractHydrator.php">
    <DeprecatedClass occurrences="2">
      <code>IterableResult</code>
      <code>new IterableResult($this)</code>
    </DeprecatedClass>
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation occurrences="1">
      <code>return $rowData;</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ArrayHydrator.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$index</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArrayAssignment occurrences="2">
      <code>$result[$resultKey]</code>
      <code>$result[$resultKey]</code>
    </PossiblyNullArrayAssignment>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$newObject['args']</code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation occurrences="1">
      <code>$result</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/IterableResult.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>mixed[]|false</code>
    </ImplementedReturnTypeMismatch>
    <PossiblyFalsePropertyAssignmentValue occurrences="2">
      <code>$this-&gt;_hydrator-&gt;hydrateRow()</code>
      <code>$this-&gt;next()</code>
    </PossiblyFalsePropertyAssignmentValue>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;_current !== false</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ObjectHydrator.php">
    <PossiblyFalseArgument occurrences="1">
      <code>$index</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument occurrences="7">
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="2">
      <code>$objectClass</code>
      <code>$relation['mappedBy']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClass-&gt;reflFields</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="6">
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$class-&gt;associationMappings[$class-&gt;identifier[0]]['joinColumns']</code>
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$newObject['args']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/SimpleObjectHydrator.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$class</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$repositoryClassName</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="1">
      <code>addNamedQuery</code>
    </DeprecatedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.php">
    <PossiblyNullArgument occurrences="1">
      <code>$class</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/FieldBuilder.php">
    <PropertyNotSetInConstructor occurrences="3">
      <code>$generatedValue</code>
      <code>$sequenceDef</code>
      <code>$version</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="3">
      <code>(bool) $flag</code>
      <code>(bool) $flag</code>
      <code>(string) $customIdGenerator</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadata.php">
    <PropertyNotSetInConstructor occurrences="5">
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataFactory.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>$class</code>
      <code>$class</code>
      <code>$nonSuperclassParents</code>
      <code>new $definition['class']()</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>new UuidGenerator()</code>
    </DeprecatedClass>
    <DeprecatedConstant occurrences="1">
      <code>ClassMetadata::GENERATOR_TYPE_UUID</code>
    </DeprecatedConstant>
    <DeprecatedMethod occurrences="2">
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="2">
      <code>! $definition</code>
      <code>$definition</code>
    </DocblockTypeContradiction>
    <InvalidArrayOffset occurrences="1">
      <code>$subClass-&gt;table[$indexType][$indexName]</code>
    </InvalidArrayOffset>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$subClass-&gt;table</code>
    </InvalidPropertyAssignmentValue>
    <MissingConstructor occurrences="2">
      <code>$driver</code>
      <code>$evm</code>
    </MissingConstructor>
    <PossiblyInvalidArrayAssignment occurrences="1">
      <code>$subClass-&gt;table[$indexType][$indexName]</code>
    </PossiblyInvalidArrayAssignment>
    <PossiblyInvalidIterator occurrences="1">
      <code>$parentClass-&gt;table[$indexType]</code>
    </PossiblyInvalidIterator>
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;em</code>
      <code>$this-&gt;em</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;em-&gt;getConfiguration()-&gt;getMetadataDriverImpl()</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference occurrences="6">
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConnection</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataInfo.php">
    <DeprecatedConstant occurrences="1">
      <code>self::GENERATOR_TYPE_UUID</code>
    </DeprecatedConstant>
    <DeprecatedMethod occurrences="2">
      <code>canEmulateSchemas</code>
      <code>canRequireSQLConversion</code>
    </DeprecatedMethod>
    <DeprecatedProperty occurrences="4">
      <code>$this-&gt;columnNames</code>
      <code>$this-&gt;columnNames</code>
      <code>$this-&gt;columnNames</code>
      <code>$this-&gt;columnNames</code>
    </DeprecatedProperty>
    <DocblockTypeContradiction occurrences="3">
      <code>! $this-&gt;table</code>
      <code>! class_exists($mapping['targetEntity'])</code>
      <code>$this-&gt;table</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="3">
      <code>protected function _validateAndCompleteAssociationMapping(array $mapping)</code>
      <code>protected function _validateAndCompleteManyToManyMapping(array $mapping)</code>
      <code>protected function _validateAndCompleteOneToOneMapping(array $mapping)</code>
    </InvalidDocblock>
    <InvalidNullableReturnType occurrences="3">
      <code>ReflectionProperty</code>
      <code>ReflectionProperty</code>
      <code>getAssociationMappedByTargetField</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>$definition</code>
      <code>$this-&gt;subClasses</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;reflClass</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>getReflectionClass</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement occurrences="4">
      <code>$cache</code>
      <code>$className</code>
      <code>$className</code>
      <code>$this-&gt;namespace . '\\' . $className</code>
    </LessSpecificReturnStatement>
    <MissingReturnType occurrences="3">
      <code>_validateAndCompleteAssociationMapping</code>
      <code>_validateAndCompleteManyToManyMapping</code>
      <code>_validateAndCompleteOneToOneMapping</code>
    </MissingReturnType>
    <MoreSpecificReturnType occurrences="2">
      <code>array{usage: int, region: string|null}</code>
      <code>class-string|null</code>
    </MoreSpecificReturnType>
    <NullableReturnStatement occurrences="4">
      <code>$this-&gt;associationMappings[$fieldName]['mappedBy']</code>
      <code>$this-&gt;reflClass</code>
      <code>$this-&gt;reflFields[$name]</code>
      <code>$this-&gt;reflFields[$this-&gt;identifier[0]]</code>
    </NullableReturnStatement>
    <ParamNameMismatch occurrences="3">
      <code>$entity</code>
      <code>$fieldName</code>
      <code>$fieldName</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="8">
      <code>$class</code>
      <code>$className</code>
      <code>$entityResult['entityClass']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$parentReflFields[$embeddedClass['declaredField']]</code>
      <code>$parentReflFields[$mapping['declaredField']]</code>
      <code>$queryMapping['resultClass']</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch occurrences="2">
      <code>$embeddable-&gt;reflClass-&gt;name</code>
      <code>$this-&gt;reflClass-&gt;name</code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference occurrences="9">
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>instantiate</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="8">
      <code>$mapping['originalClass']</code>
      <code>$mapping['originalField']</code>
      <code>$mapping['targetEntity']</code>
      <code>$this-&gt;associationMappings[$assocName]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$idProperty]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$idProperty]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor occurrences="5">
      <code>$idGenerator</code>
      <code>$namespace</code>
      <code>$sequenceGeneratorDefinition</code>
      <code>$table</code>
      <code>$tableGeneratorDefinition</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="12">
      <code>$this-&gt;associationMappings</code>
      <code>$this-&gt;associationMappings</code>
      <code>$this-&gt;entityListeners</code>
      <code>$this-&gt;fieldMappings</code>
      <code>$this-&gt;fullyQualifiedClassName($repositoryClassName)</code>
      <code>$this-&gt;sqlResultSetMappings</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
    </PropertyTypeCoercion>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$mapping !== false</code>
      <code>$mapping !== false</code>
    </RedundantConditionGivenDocblockType>
    <RedundantFunctionCall occurrences="1">
      <code>array_values</code>
    </RedundantFunctionCall>
    <TooManyArguments occurrences="2">
      <code>joinColumnName</code>
      <code>joinColumnName</code>
    </TooManyArguments>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ColumnResult.php">
    <MissingConstructor occurrences="1">
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultEntityListenerResolver.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_object($object)</code>
    </DocblockTypeContradiction>
    <InvalidStringClass occurrences="1">
      <code>new $className()</code>
    </InvalidStringClass>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;instances</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultNamingStrategy.php">
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($className, '\\')</code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php">
    <DeprecatedMethod occurrences="2">
      <code>canEmulateSchemas</code>
      <code>canEmulateSchemas</code>
    </DeprecatedMethod>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DiscriminatorColumn.php">
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$columnDefinition</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/AnnotationDriver.php">
    <DeprecatedMethod occurrences="2">
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="1">
      <code>new ReflectionClass($metadata-&gt;name)</code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement occurrences="1">
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1"/>
    <PossiblyNullArgument occurrences="1">
      <code>$listenerClassName</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$primaryTable['indexes']</code>
      <code>$primaryTable['uniqueConstraints']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$metadata-&gt;getReflectionClass()</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="5">
      <code>mapEmbedded</code>
      <code>mapManyToMany</code>
      <code>mapManyToOne</code>
      <code>mapOneToMany</code>
      <code>mapOneToOne</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/AttributeDriver.php">
    <DocblockTypeContradiction occurrences="1">
      <code>new ReflectionClass($metadata-&gt;name)</code>
    </DocblockTypeContradiction>
    <InvalidArrayAccess occurrences="4">
      <code>$value[0]</code>
      <code>$value[0]</code>
      <code>$value[1]</code>
      <code>$value[1]</code>
    </InvalidArrayAccess>
    <LessSpecificReturnStatement occurrences="1">
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1"/>
    <PossiblyNullArgument occurrences="1">
      <code>$listenerClassName</code>
    </PossiblyNullArgument>
    <RedundantCondition occurrences="3">
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($property instanceof ReflectionProperty)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$metadata-&gt;getReflectionClass()</code>
      <code>assert($cacheAttribute instanceof Mapping\Cache)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/DatabaseDriver.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$metadata instanceof ClassMetadata</code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement occurrences="2">
      <code>$this-&gt;namespace . $this-&gt;classNamesForTables[$tableName]</code>
      <code>$this-&gt;namespace . $this-&gt;inflector-&gt;classify(strtolower($tableName))</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1">
      <code>class-string</code>
    </MoreSpecificReturnType>
    <PossiblyNullArrayAccess occurrences="2">
      <code>$this-&gt;tables[$tableName]</code>
      <code>$this-&gt;tables[$tableName]</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="4">
      <code>getColumns</code>
      <code>getColumns</code>
      <code>getColumns</code>
      <code>getIndexes</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion occurrences="1">
      <code>$metadata-&gt;table</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/PHPDriver.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>PHPDriver</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.php">
    <MissingParamType occurrences="2">
      <code>$fileExtension</code>
      <code>$prefixes</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/SimplifiedYamlDriver.php">
    <MissingParamType occurrences="2">
      <code>$fileExtension</code>
      <code>$prefixes</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/XmlDriver.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>(string) $xmlRoot['repository-class']</code>
      <code>isset($xmlRoot['repository-class']) ? (string) $xmlRoot['repository-class'] : null</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="2">
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <DocblockTypeContradiction occurrences="3">
      <code>$xmlRoot-&gt;getName() === 'embeddable'</code>
      <code>$xmlRoot-&gt;getName() === 'entity'</code>
      <code>$xmlRoot-&gt;getName() === 'mapped-superclass'</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="4">
      <code>$this-&gt;cacheToArray($manyToManyElement-&gt;cache)</code>
      <code>$this-&gt;cacheToArray($manyToOneElement-&gt;cache)</code>
      <code>$this-&gt;cacheToArray($oneToManyElement-&gt;cache)</code>
      <code>$this-&gt;cacheToArray($oneToOneElement-&gt;cache)</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$metadata-&gt;table</code>
    </InvalidPropertyAssignmentValue>
    <LessSpecificReturnStatement occurrences="1"/>
    <MissingParamType occurrences="2">
      <code>$fileExtension</code>
      <code>$locator</code>
    </MissingParamType>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1">
      <code>array{usage: int|null, region?: string}</code>
    </MoreSpecificReturnType>
    <NoInterfaceProperties occurrences="2">
      <code>$indexXml-&gt;options</code>
      <code>$uniqueXml-&gt;options</code>
    </NoInterfaceProperties>
    <PossiblyInvalidPropertyFetch occurrences="2">
      <code>$indexXml-&gt;options</code>
      <code>$uniqueXml-&gt;options</code>
    </PossiblyInvalidPropertyFetch>
    <RedundantCondition occurrences="19">
      <code>isset($xmlRoot-&gt;cache)</code>
      <code>isset($xmlRoot-&gt;embedded)</code>
      <code>isset($xmlRoot-&gt;field)</code>
      <code>isset($xmlRoot-&gt;indexes)</code>
      <code>isset($xmlRoot-&gt;options)</code>
      <code>isset($xmlRoot-&gt;{'association-overrides'})</code>
      <code>isset($xmlRoot-&gt;{'attribute-overrides'})</code>
      <code>isset($xmlRoot-&gt;{'discriminator-column'})</code>
      <code>isset($xmlRoot-&gt;{'discriminator-map'})</code>
      <code>isset($xmlRoot-&gt;{'entity-listeners'})</code>
      <code>isset($xmlRoot-&gt;{'lifecycle-callbacks'})</code>
      <code>isset($xmlRoot-&gt;{'many-to-many'})</code>
      <code>isset($xmlRoot-&gt;{'many-to-one'})</code>
      <code>isset($xmlRoot-&gt;{'named-native-queries'})</code>
      <code>isset($xmlRoot-&gt;{'named-queries'})</code>
      <code>isset($xmlRoot-&gt;{'one-to-many'})</code>
      <code>isset($xmlRoot-&gt;{'one-to-one'})</code>
      <code>isset($xmlRoot-&gt;{'sql-result-set-mappings'})</code>
      <code>isset($xmlRoot-&gt;{'unique-constraints'})</code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/YamlDriver.php">
    <DeprecatedMethod occurrences="2">
      <code>addNamedNativeQuery</code>
      <code>addNamedQuery</code>
    </DeprecatedMethod>
    <InvalidDocblock occurrences="1">
      <code>private function cacheToArray(array $cacheMapping): array</code>
    </InvalidDocblock>
    <MissingParamType occurrences="2">
      <code>$fileExtension</code>
      <code>$locator</code>
    </MissingParamType>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUndefinedMethod occurrences="18">
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
    </PossiblyUndefinedMethod>
    <PropertyTypeCoercion occurrences="1">
      <code>$metadata-&gt;table</code>
    </PropertyTypeCoercion>
    <UndefinedInterfaceMethod occurrences="10">
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
      <code>$element</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Embedded.php">
    <MissingParamType occurrences="1">
      <code>$columnPrefix</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/EntityResult.php">
    <MissingConstructor occurrences="2">
      <code>$discriminatorColumn</code>
      <code>$entityClass</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/FieldResult.php">
    <MissingConstructor occurrences="2">
      <code>$column</code>
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/InverseJoinColumn.php">
    <MissingParamType occurrences="1">
      <code>$onDelete</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/JoinColumn.php">
    <MissingParamType occurrences="1">
      <code>$onDelete</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/JoinColumns.php">
    <MissingConstructor occurrences="1">
      <code>$value</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/JoinTable.php">
    <MissingParamType occurrences="2">
      <code>$inverseJoinColumns</code>
      <code>$joinColumns</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/MappingException.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$className</code>
      <code>$entityName</code>
    </ArgumentTypeCoercion>
    <MissingParamType occurrences="4">
      <code>$className</code>
      <code>$className</code>
      <code>$indexName</code>
      <code>$indexName</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/NamedNativeQuery.php">
    <MissingConstructor occurrences="4">
      <code>$name</code>
      <code>$query</code>
      <code>$resultClass</code>
      <code>$resultSetMapping</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/NamedQueries.php">
    <MissingConstructor occurrences="1">
      <code>$value</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/NamedQuery.php">
    <MissingConstructor occurrences="2">
      <code>$name</code>
      <code>$query</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/OneToMany.php">
    <PossiblyNullPropertyAssignmentValue occurrences="3">
      <code>$cascade</code>
      <code>$indexBy</code>
      <code>$mappedBy</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEmbeddedProperty.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;embeddedClass</code>
    </ArgumentTypeCoercion>
    <MissingParamType occurrences="3">
      <code>$object</code>
      <code>$object</code>
      <code>$value</code>
    </MissingParamType>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $embeddedClass</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/SequenceGenerator.php">
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$sequenceName</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/SqlResultSetMapping.php">
    <MissingConstructor occurrences="1">
      <code>$name</code>
    </MissingConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/UnderscoreNamingStrategy.php">
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($className, '\\')</code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/NativeQuery.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$sql</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/ORMInvalidArgumentException.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$entity</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="lib/Doctrine/ORM/PersistentCollection.php">
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>Collection&lt;TKey, T&gt;</code>
      <code>object|null</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="2">
      <code>$this-&gt;em-&gt;find($this-&gt;typeClass-&gt;name, $key)</code>
    </InvalidReturnStatement>
    <MissingParamType occurrences="1">
      <code>$offset</code>
    </MissingParamType>
    <ParamNameMismatch occurrences="1">
      <code>$value</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="5">
      <code>$this-&gt;association</code>
      <code>$this-&gt;association</code>
      <code>$this-&gt;association</code>
      <code>$this-&gt;association['targetEntity']</code>
      <code>$this-&gt;backRefFieldName</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="12">
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['isOwningSide']</code>
      <code>$this-&gt;association['orphanRemoval']</code>
      <code>$this-&gt;association['targetEntity']</code>
      <code>$this-&gt;association['type']</code>
      <code>$this-&gt;association['type']</code>
      <code>$this-&gt;association['type']</code>
      <code>$this-&gt;association['type']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="2">
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="4">
      <code>$this-&gt;em</code>
      <code>$this-&gt;em</code>
      <code>is_object($value) &amp;&amp; $this-&gt;em</code>
      <code>is_object($value) &amp;&amp; $this-&gt;em</code>
    </RedundantConditionGivenDocblockType>
    <TooManyArguments occurrences="1">
      <code>andX</code>
    </TooManyArguments>
    <UndefinedInterfaceMethod occurrences="1">
      <code>matching</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/ManyToManyPersister.php">
    <PossiblyNullArgument occurrences="44">
      <code>$association</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$filterMapping</code>
      <code>$filterMapping</code>
      <code>$indexBy</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns'][$joinTableColumn]</code>
      <code>$mapping['relationToTargetKeyColumns'][$joinTableColumn]</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="36">
      <code>$mapping['indexBy']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToTargetKeyColumns']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="3">
      <code>$associationSourceClass-&gt;associationMappings</code>
      <code>$sourceClass-&gt;associationMappings</code>
      <code>$targetClass-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullIterator occurrences="8">
      <code>$joinColumns</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
    </PossiblyNullIterator>
    <PossiblyNullReference occurrences="2">
      <code>getFieldForColumn</code>
      <code>getFieldForColumn</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$mapping['joinTable']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/OneToManyPersister.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>int|null</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="2">
      <code>$numDeleted</code>
      <code>$this-&gt;conn-&gt;executeStatement($statement, $parameters)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="2">
      <code>int</code>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyNullArgument occurrences="14">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$mapping</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="13">
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['orphanRemoval']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClass-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$targetClass-&gt;associationMappings[$mapping['mappedBy']]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/BasicEntityPersister.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$value === null</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="2">
      <code>$em-&gt;getMetadataFactory()</code>
      <code>$hints</code>
    </InvalidArgument>
    <InvalidNullableReturnType occurrences="1">
      <code>loadOneToOneEntity</code>
    </InvalidNullableReturnType>
    <InvalidScalarArgument occurrences="4">
      <code>$hints</code>
      <code>[Query::HINT_REFRESH =&gt; true]</code>
      <code>[UnitOfWork::HINT_DEFEREAGERLOAD =&gt; true]</code>
      <code>[UnitOfWork::HINT_DEFEREAGERLOAD =&gt; true]</code>
    </InvalidScalarArgument>
    <LessSpecificReturnStatement occurrences="3">
      <code>$postInsertIds</code>
      <code>[$params, $types]</code>
      <code>[$sqlParams, $sqlTypes]</code>
    </LessSpecificReturnStatement>
    <MissingReturnType occurrences="1">
      <code>loadAll</code>
    </MissingReturnType>
    <MoreSpecificReturnType occurrences="3">
      <code>executeInserts</code>
      <code>expandCriteriaParameters</code>
      <code>expandParameters</code>
    </MoreSpecificReturnType>
    <NullableReturnStatement occurrences="2">
      <code>$targetEntity</code>
      <code>$targetEntity</code>
    </NullableReturnStatement>
    <PossiblyNullArgument occurrences="3">
      <code>$assoc['mappedBy']</code>
      <code>$association</code>
      <code>$type</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$assoc['isOwningSide']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="2">
      <code>$class-&gt;associationMappings</code>
      <code>$class-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="7">
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="15">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinColumns']</code>
      <code>$assoc['relationToTargetKeyColumns']</code>
      <code>$assoc['sourceToTargetKeyColumns']</code>
      <code>$association['joinColumns']</code>
      <code>$association['joinColumns']</code>
      <code>$association['joinColumns']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
      <code>$this-&gt;class-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$this-&gt;class-&gt;associationMappings[$idField]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;currentPersisterContext-&gt;sqlTableAliases</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/CachedPersisterContext.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$selectJoinSql</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="1">
      <code>$class</code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $handlesLimits</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/EntityPersister.php">
    <MissingReturnType occurrences="1">
      <code>loadAll</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/JoinedSubclassPersister.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$postInsertIds</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>executeInserts</code>
    </MoreSpecificReturnType>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$assoc['targetToSourceKeyColumns']</code>
      <code>$mapping['joinColumns']</code>
      <code>$mapping['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/SingleTablePersister.php">
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$assoc['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$columnList</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="lib/Doctrine/ORM/Proxy/ProxyFactory.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$classMetadata</code>
      <code>$classMetadata</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="3">
      <code>$classMetadata-&gt;getReflectionProperties()</code>
      <code>$em-&gt;getMetadataFactory()</code>
      <code>$em-&gt;getMetadataFactory()</code>
    </InvalidArgument>
    <NoInterfaceProperties occurrences="2">
      <code>$metadata-&gt;isEmbeddedClass</code>
      <code>$metadata-&gt;isMappedSuperclass</code>
    </NoInterfaceProperties>
    <PossiblyNullPropertyFetch occurrences="1">
      <code>$property-&gt;name</code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference occurrences="1">
      <code>setAccessible</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod occurrences="1">
      <code>__wakeup</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query.php">
    <DeprecatedClass occurrences="1">
      <code>IterableResult</code>
    </DeprecatedClass>
    <DeprecatedMethod occurrences="1">
      <code>parent::iterate($parameters, $hydrationMode)</code>
    </DeprecatedMethod>
    <InvalidScalarArgument occurrences="1">
      <code>$sqlParams</code>
    </InvalidScalarArgument>
    <LessSpecificReturnStatement occurrences="2">
      <code>parent::setHint($name, $value)</code>
      <code>parent::setHydrationMode($hydrationMode)</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$parameters</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="2">
      <code>self</code>
      <code>self</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;getDQL()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>evictEntityRegion</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$parserResult</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ArithmeticFactor.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ArithmeticTerm.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/BetweenExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$not</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/CoalesceExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/CollectionMemberExpression.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$not</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ComparisonExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalFactor.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalPrimary.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ConditionalTerm.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/DeleteClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aliasIdentificationVariable</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/DeleteStatement.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/EmptyCollectionComparisonExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$not</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/ExistsExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$not</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/FromClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/AbsFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$simpleArithmeticExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/AvgFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aggregateExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitAndFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$firstArithmetic</code>
      <code>$secondArithmetic</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitOrFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$firstArithmetic</code>
      <code>$secondArithmetic</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/ConcatFunction.php">
    <PropertyNotSetInConstructor occurrences="2">
      <code>$firstStringPrimary</code>
      <code>$secondStringPrimary</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/CountFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aggregateExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateAddFunction.php">
    <ArgumentTypeCoercion occurrences="7">
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
    </ArgumentTypeCoercion>
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullPropertyAssignmentValue occurrences="3">
      <code>null</code>
      <code>null</code>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <UndefinedPropertyFetch occurrences="1">
      <code>$this-&gt;unit-&gt;value</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateDiffFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$date1</code>
      <code>$date2</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateSubFunction.php">
    <ArgumentTypeCoercion occurrences="7">
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
      <code>$this-&gt;intervalExpression-&gt;dispatch($sqlWalker)</code>
    </ArgumentTypeCoercion>
    <UndefinedPropertyFetch occurrences="1">
      <code>$this-&gt;unit-&gt;value</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/FunctionNode.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/IdentityFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;getLexer()-&gt;token['value']</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$parser-&gt;getLexer()-&gt;token['value']</code>
    </PossiblyNullArrayAccess>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$assoc['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$pathExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LengthFunction.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;stringPrimary</code>
    </ArgumentTypeCoercion>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$stringPrimary</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LocateFunction.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;simpleArithmeticExpression</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$firstStringPrimary</code>
      <code>$secondStringPrimary</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LowerFunction.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;stringPrimary</code>
    </ArgumentTypeCoercion>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$stringPrimary</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/MaxFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aggregateExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/MinFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aggregateExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/ModFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$firstSimpleArithmeticExpression</code>
      <code>$secondSimpleArithmeticExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SizeFunction.php">
    <PossiblyNullArrayOffset occurrences="2">
      <code>$targetClass-&gt;associationMappings</code>
      <code>$targetClass-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$owningAssoc['joinTable']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$collectionPathExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SqrtFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$simpleArithmeticExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SubstringFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$firstSimpleArithmeticExpression</code>
      <code>$stringPrimary</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SumFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aggregateExpression</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/TrimFunction.php">
    <PossiblyInvalidArgument occurrences="3">
      <code>$value</code>
      <code>$value</code>
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$lexer-&gt;token['value']</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArrayAccess occurrences="2">
      <code>$lexer-&gt;lookahead['value']</code>
      <code>$lexer-&gt;token['value']</code>
    </PossiblyNullArrayAccess>
    <PropertyNotSetInConstructor occurrences="4">
      <code>$both</code>
      <code>$leading</code>
      <code>$stringPrimary</code>
      <code>$trailing</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/UpperFunction.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;stringPrimary</code>
    </ArgumentTypeCoercion>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$stringPrimary</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/GeneralCaseExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/GroupByClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/HavingClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/IdentificationVariableDeclaration.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/InExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$not</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/IndexBy.php">
    <DeprecatedProperty occurrences="1">
      <code>$this-&gt;simpleStateFieldPathExpression</code>
    </DeprecatedProperty>
    <InvalidNullableReturnType occurrences="1">
      <code>dispatch</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="1">
      <code>$sqlWalker-&gt;walkIndexBy($this)</code>
    </NullableReturnStatement>
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PossiblyNullPropertyAssignmentValue occurrences="2">
      <code>null</code>
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/InstanceOfExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$not</code>
      <code>$value</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Join.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinAssociationDeclaration.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinClassPathExpression.php">
    <UndefinedMethod occurrences="1">
      <code>walkJoinPathExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinVariableDeclaration.php">
    <UndefinedMethod occurrences="1">
      <code>walkJoinVariableDeclaration</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/LikeExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/NewObjectExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Node.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_array($obj)</code>
    </DocblockTypeContradiction>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_object($obj)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/NullComparisonExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$not</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/NullIfExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/OrderByClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/OrderByItem.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$type</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/QuantifiedExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$type</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SelectClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SelectExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SelectStatement.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleArithmeticExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleCaseExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleSelectClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleSelectExpression.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$fieldIdentificationVariable</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleWhenClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <UndefinedMethod occurrences="1">
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Subselect.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SubselectFromClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/UpdateClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$aliasIdentificationVariable</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/UpdateItem.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/UpdateStatement.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/WhenClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
    <UndefinedMethod occurrences="1">
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/WhereClause.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/AbstractSqlExecutor.php">
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.php">
    <InvalidReturnStatement occurrences="1">
      <code>$numDeleted</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor occurrences="2">
      <code>MultiTableDeleteExecutor</code>
      <code>MultiTableDeleteExecutor</code>
    </PropertyNotSetInConstructor>
    <UninitializedProperty occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.php">
    <InvalidReturnStatement occurrences="1">
      <code>$numUpdated</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor occurrences="1">
      <code>MultiTableUpdateExecutor</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleSelectExecutor.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>SingleSelectExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.php">
    <InvalidReturnStatement occurrences="1">
      <code>$conn-&gt;executeStatement($this-&gt;_sqlStatements, $params, $types)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>SingleTableDeleteUpdateExecutor</code>
      <code>SingleTableDeleteUpdateExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr.php">
    <MissingParamType occurrences="1">
      <code>$y</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Andx.php">
    <NonInvariantDocblockPropertyType occurrences="2">
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Base.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;parts</code>
    </ArgumentTypeCoercion>
    <PossiblyInvalidCast occurrences="1">
      <code>$this-&gt;parts[0]</code>
    </PossiblyInvalidCast>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Composite.php">
    <PossiblyInvalidCast occurrences="2">
      <code>$part</code>
      <code>$this-&gt;parts[0]</code>
    </PossiblyInvalidCast>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/GroupBy.php">
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Join.php">
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;conditionType</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Literal.php">
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Orx.php">
    <NonInvariantDocblockPropertyType occurrences="2">
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Select.php">
    <NonInvariantDocblockPropertyType occurrences="2">
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Filter/SQLFilter.php">
    <MissingClosureParamType occurrences="1">
      <code>$value</code>
    </MissingClosureParamType>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($value) use ($connection, $param) {</code>
    </MissingClosureReturnType>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;parameters</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/Parser.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$stringPattern</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$lookaheadType</code>
    </InvalidArgument>
    <InvalidNullableReturnType occurrences="1">
      <code>SelectStatement|UpdateStatement|DeleteStatement</code>
    </InvalidNullableReturnType>
    <InvalidReturnStatement occurrences="17">
      <code>$aliasIdentVariable</code>
      <code>$factors[0]</code>
      <code>$identVariable</code>
      <code>$primary</code>
      <code>$resultVariable</code>
      <code>$resultVariable</code>
      <code>$terms[0]</code>
      <code>$this-&gt;CollectionMemberExpression()</code>
      <code>$this-&gt;ComparisonExpression()</code>
      <code>$this-&gt;EmptyCollectionComparisonExpression()</code>
      <code>$this-&gt;ExistsExpression()</code>
      <code>$this-&gt;InExpression()</code>
      <code>$this-&gt;InstanceOfExpression()</code>
      <code>$this-&gt;LikeExpression()</code>
      <code>$this-&gt;NullComparisonExpression()</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="9">
      <code>AST\BetweenExpression|</code>
      <code>ArithmeticFactor</code>
      <code>ArithmeticTerm</code>
      <code>SimpleArithmeticExpression|ArithmeticTerm</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </InvalidReturnType>
    <InvalidScalarArgument occurrences="13">
      <code>$field</code>
      <code>$field</code>
      <code>$functionName</code>
      <code>$functionName</code>
      <code>$functionName</code>
      <code>$this-&gt;lexer-&gt;getLiteral($token)</code>
      <code>$this-&gt;lexer-&gt;getLiteral($token)</code>
      <code>$this-&gt;lexer-&gt;getLiteral($token)</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
    </InvalidScalarArgument>
    <InvalidStringClass occurrences="3">
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement occurrences="4">
      <code>$function</code>
      <code>$function</code>
      <code>$function</code>
      <code>$token</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>array{value: string, type: int|null|string, position: int}|null</code>
    </MoreSpecificReturnType>
    <NullableReturnStatement occurrences="9">
      <code>$aliasIdentVariable</code>
      <code>$factors[0]</code>
      <code>$identVariable</code>
      <code>$resultVariable</code>
      <code>$resultVariable</code>
      <code>$statement</code>
      <code>$terms[0]</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
    </NullableReturnStatement>
    <PossiblyFalseArgument occurrences="1">
      <code>strrpos($fromClassName, '\\')</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument occurrences="13">
      <code>$AST</code>
      <code>$conditionalExpression</code>
      <code>$expr</code>
      <code>$pathExp</code>
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$token['value']</code>
      <code>$token['value']</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue occurrences="4">
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;SimpleArithmeticExpression()</code>
      <code>$value</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArgument occurrences="6">
      <code>$aliasIdentVariable</code>
      <code>$dql</code>
      <code>$fromClassName</code>
      <code>$resultVariable</code>
      <code>$this-&gt;query-&gt;getDQL()</code>
      <code>$token['value']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="73">
      <code>$glimpse['type']</code>
      <code>$glimpse['value']</code>
      <code>$lookahead['type']</code>
      <code>$lookahead['type']</code>
      <code>$next['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['type']</code>
      <code>$peek['value']</code>
      <code>$peek['value']</code>
      <code>$this-&gt;lexer-&gt;glimpse()['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['type']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;lookahead['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$this-&gt;lexer-&gt;token['value']</code>
      <code>$token['type']</code>
      <code>$token['type']</code>
      <code>$token['type']</code>
      <code>$token['type']</code>
      <code>$token['type']</code>
      <code>$token['value']</code>
      <code>$token['value']</code>
      <code>$token['value']</code>
      <code>$token['value']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="1">
      <code>getNumberOfRequiredParameters</code>
    </PossiblyNullReference>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$args</code>
    </PossiblyUndefinedVariable>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$AST instanceof AST\SelectStatement</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/ParserResult.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$_sqlExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/QueryExpressionVisitor.php">
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>Comparison::EQ</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/ResultSetMappingBuilder.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$class</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="4">
      <code>addNamedNativeQueryEntityResultMapping</code>
      <code>addNamedNativeQueryEntityResultMapping</code>
      <code>addNamedNativeQueryResultClassMapping</code>
      <code>addNamedNativeQueryResultSetMapping</code>
    </DeprecatedMethod>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$associationMapping['joinColumns']</code>
      <code>$associationMapping['joinColumns']</code>
      <code>$associationMapping['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/SqlWalker.php">
    <DocblockTypeContradiction occurrences="2">
      <code>''</code>
      <code>is_string($expression)</code>
    </DocblockTypeContradiction>
    <ImplementedReturnTypeMismatch occurrences="46">
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
      <code>string</code>
    </ImplementedReturnTypeMismatch>
    <ImplicitToStringCast occurrences="1">
      <code>$expr</code>
    </ImplicitToStringCast>
    <InvalidArgument occurrences="4">
      <code>$condExpr</code>
      <code>$condTerm</code>
      <code>$factor</code>
      <code>$selectedClass['class']-&gt;name</code>
    </InvalidArgument>
    <InvalidNullableReturnType occurrences="1">
      <code>string</code>
    </InvalidNullableReturnType>
    <InvalidScalarArgument occurrences="3">
      <code>$this-&gt;queryComponents[$expr]['token']['value']</code>
      <code>$this-&gt;queryComponents[$factor]['token']['value']</code>
      <code>$this-&gt;queryComponents[$term]['token']['value']</code>
    </InvalidScalarArgument>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$query</code>
    </MoreSpecificImplementedParamType>
    <PossiblyInvalidArgument occurrences="2">
      <code>$aggExpression-&gt;pathExpression</code>
      <code>$whereClause-&gt;conditionalExpression</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="8">
      <code>$AST-&gt;whereClause</code>
      <code>$AST-&gt;whereClause</code>
      <code>$AST-&gt;whereClause</code>
      <code>$arithmeticExpr-&gt;simpleArithmeticExpression</code>
      <code>$arithmeticExpr-&gt;subselect</code>
      <code>$condExpr</code>
      <code>$identificationVariableDecl-&gt;rangeVariableDeclaration</code>
      <code>$subselect-&gt;whereClause</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset occurrences="4">
      <code>$targetClass-&gt;associationMappings</code>
      <code>$targetClass-&gt;associationMappings</code>
      <code>$this-&gt;scalarResultAliasMap</code>
      <code>$this-&gt;scalarResultAliasMap</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="1">
      <code>dispatch</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="8">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinColumns']</code>
      <code>$assoc['sourceToTargetKeyColumns']</code>
      <code>$assoc['targetToSourceKeyColumns']</code>
      <code>$association['sourceToTargetKeyColumns']</code>
      <code>$association['targetToSourceKeyColumns']</code>
      <code>$owningAssoc['joinTable']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$whereClause !== null</code>
      <code>($factor-&gt;not ? 'NOT ' : '') . $this-&gt;walkConditionalPrimary($factor-&gt;conditionalPrimary)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/TreeWalkerAdapter.php">
    <InvalidNullableReturnType occurrences="1">
      <code>getExecutor</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="1">
      <code>null</code>
    </NullableReturnStatement>
  </file>
  <file src="lib/Doctrine/ORM/Query/TreeWalkerChain.php">
    <InvalidNullableReturnType occurrences="1">
      <code>getExecutor</code>
    </InvalidNullableReturnType>
    <MissingParamType occurrences="1">
      <code>$dqlAlias</code>
    </MissingParamType>
    <NullableReturnStatement occurrences="1">
      <code>null</code>
    </NullableReturnStatement>
    <ParamNameMismatch occurrences="1">
      <code>$condPrimary</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/TreeWalkerChainIterator.php">
    <ImplementedParamTypeMismatch occurrences="1">
      <code>$value</code>
    </ImplementedParamTypeMismatch>
    <ImplementedReturnTypeMismatch occurrences="2">
      <code>TreeWalker|null</code>
      <code>class-string&lt;TreeWalker&gt;|false</code>
    </ImplementedReturnTypeMismatch>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$this-&gt;walkers</code>
    </PossiblyNullArrayOffset>
    <PropertyTypeCoercion occurrences="2">
      <code>$this-&gt;walkers</code>
      <code>$this-&gt;walkers</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/QueryBuilder.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>[$rootAlias =&gt; $join]</code>
      <code>[$rootAlias =&gt; $join]</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="2">
      <code>getRootAlias</code>
      <code>getRootAlias</code>
    </DeprecatedMethod>
    <FalsableReturnStatement occurrences="1">
      <code>! $filteredParameters-&gt;isEmpty() ? $filteredParameters-&gt;first() : null</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <PossiblyFalseArgument occurrences="2">
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand occurrences="2">
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseOperand>
    <PossiblyInvalidIterator occurrences="1">
      <code>$dqlPart</code>
    </PossiblyInvalidIterator>
    <PossiblyNullArgument occurrences="2">
      <code>$alias</code>
      <code>$alias</code>
    </PossiblyNullArgument>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>self::SELECT</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Repository/DefaultRepositoryFactory.php">
    <InvalidReturnStatement occurrences="2">
      <code>$this-&gt;repositoryList[$repositoryHash]</code>
      <code>$this-&gt;repositoryList[$repositoryHash] = $this-&gt;createRepository($entityManager, $entityName)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>ObjectRepository</code>
    </InvalidReturnType>
    <TypeDoesNotContainType occurrences="1">
      <code>$repository instanceof EntityRepository</code>
    </TypeDoesNotContainType>
    <UnsafeInstantiation occurrences="1">
      <code>new $repositoryClassName($entityManager, $metadata)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/CollectionRegionCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="1">
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/EntityRegionCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="1">
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/MetadataCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/QueryCommand.php">
    <DeprecatedMethod occurrences="1">
      <code>getQueryCacheImpl</code>
    </DeprecatedMethod>
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/QueryRegionCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/ResultCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ConvertDoctrine1SchemaCommand.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$metadata</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="11">
      <code>ClassMetadataExporter</code>
      <code>ClassMetadataExporter</code>
      <code>ClassMetadataExporter|null</code>
      <code>EntityGenerator</code>
      <code>EntityGenerator</code>
      <code>EntityGenerator|null</code>
      <code>new ClassMetadataExporter()</code>
      <code>new ConvertDoctrine1Schema($fromPaths)</code>
      <code>new EntityGenerator()</code>
      <code>private $entityGenerator = null;</code>
      <code>private $metadataExporter = null;</code>
    </DeprecatedClass>
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ConvertMappingCommand.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$metadata</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="4">
      <code>AbstractExporter</code>
      <code>new ClassMetadataExporter()</code>
      <code>new DisconnectedClassMetadataFactory()</code>
      <code>new EntityGenerator()</code>
    </DeprecatedClass>
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <NoInterfaceProperties occurrences="1">
      <code>$class-&gt;name</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/EnsureProductionSettingsCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateEntitiesCommand.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="2">
      <code>new DisconnectedClassMetadataFactory()</code>
      <code>new EntityGenerator()</code>
    </DeprecatedClass>
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <NoInterfaceProperties occurrences="1">
      <code>$metadata-&gt;name</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <NoInterfaceProperties occurrences="1">
      <code>$metadata-&gt;name</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="1">
      <code>$em-&gt;getConfiguration()-&gt;getProxyDir()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateRepositoriesCommand.php">
    <DeprecatedClass occurrences="1">
      <code>new EntityRepositoryGenerator()</code>
    </DeprecatedClass>
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <NoInterfaceProperties occurrences="1">
      <code>$metadata-&gt;customRepositoryClassName</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/InfoCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <PossiblyNullReference occurrences="1">
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/MappingDescribeCommand.php">
    <InvalidArgument occurrences="1">
      <code>$metadata-&gt;entityListeners</code>
    </InvalidArgument>
    <PossiblyNullReference occurrences="1">
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/RunDqlCommand.php">
    <DeprecatedClass occurrences="1">
      <code>Debug::dump($resultSet, (int) $input-&gt;getOption('depth'), true, false)</code>
    </DeprecatedClass>
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/AbstractCommand.php">
    <InvalidNullableReturnType occurrences="1">
      <code>int</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;executeSchemaCommand($input, $output, new SchemaTool($em), $metadatas, $ui)</code>
    </NullableReturnStatement>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;getName()</code>
      <code>$this-&gt;getName()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;getName()</code>
      <code>$this-&gt;getName()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ValidateSchemaCommand.php">
    <MissingReturnType occurrences="1">
      <code>configure</code>
    </MissingReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/DebugUnitOfWorkListener.php">
    <PossiblyNullArgument occurrences="2">
      <code>$entity</code>
      <code>$entity</code>
    </PossiblyNullArgument>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$state === UnitOfWork::STATE_DETACHED</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/EntityGenerator.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>$this-&gt;getClassToExtend()</code>
      <code>$this-&gt;getClassToExtend() ?: $metadata-&gt;name</code>
      <code>$this-&gt;getClassToExtend() ?: $metadata-&gt;name</code>
      <code>array_map('strlen', $paramTypes)</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="1">
      <code>class_exists($metadata-&gt;name)</code>
    </DocblockTypeContradiction>
    <InvalidDocblock occurrences="1">
      <code>public function setFieldVisibility($visibility)</code>
    </InvalidDocblock>
    <PossiblyFalseArgument occurrences="2">
      <code>$last</code>
      <code>strrpos($metadata-&gt;name, '\\')</code>
    </PossiblyFalseArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$variableType</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$classToExtend</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="2">
      <code>(array) $metadata-&gt;table['options']</code>
      <code>(bool) $embeddablesImmutable</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="3">
      <code>$metadata-&gt;sequenceGeneratorDefinition</code>
      <code>$metadata-&gt;sequenceGeneratorDefinition</code>
      <code>isset($metadata-&gt;lifecycleCallbacks)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/EntityRepositoryGenerator.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$fullClassName</code>
      <code>$fullClassName</code>
      <code>$fullClassName</code>
    </ArgumentTypeCoercion>
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($fullClassName, '\\')</code>
    </PossiblyFalseOperand>
    <PropertyTypeCoercion occurrences="1">
      <code>$repositoryName</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/ClassMetadataExporter.php">
    <DeprecatedClass occurrences="7">
      <code>Driver\AbstractExporter</code>
      <code>Driver\AnnotationExporter::class</code>
      <code>Driver\PhpExporter::class</code>
      <code>Driver\XmlExporter::class</code>
      <code>Driver\YamlExporter::class</code>
      <code>Driver\YamlExporter::class</code>
      <code>ExportException::invalidExporterDriverType($type)</code>
    </DeprecatedClass>
    <InvalidStringClass occurrences="1">
      <code>new $class($dest)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement occurrences="1">
      <code>new $class($dest)</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>Driver\AbstractExporter</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/AbstractExporter.php">
    <DeprecatedClass occurrences="1">
      <code>ExportException::attemptOverwriteExistingFile($path)</code>
    </DeprecatedClass>
    <DeprecatedConstant occurrences="1">
      <code>ClassMetadataInfo::GENERATOR_TYPE_UUID</code>
    </DeprecatedConstant>
    <InvalidNullableReturnType occurrences="1">
      <code>string</code>
    </InvalidNullableReturnType>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;_outputDir</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/AnnotationExporter.php">
    <DeprecatedClass occurrences="3">
      <code>AbstractExporter</code>
      <code>EntityGenerator</code>
      <code>EntityGenerator|null</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/PhpExporter.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$metadata-&gt;changeTrackingPolicy</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>AbstractExporter</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$associationMapping['joinColumns']</code>
      <code>$associationMapping['orphanRemoval']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="4">
      <code>$metadata-&gt;inheritanceType</code>
      <code>$metadata-&gt;inheritanceType</code>
      <code>$metadata-&gt;table</code>
      <code>$metadata-&gt;table</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/XmlExporter.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$metadata-&gt;changeTrackingPolicy</code>
      <code>$simpleXml-&gt;asXML()</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>AbstractExporter</code>
    </DeprecatedClass>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyFalseArgument occurrences="1">
      <code>$simpleXml-&gt;asXML()</code>
    </PossiblyFalseArgument>
    <PossiblyNullReference occurrences="1">
      <code>addAttribute</code>
    </PossiblyNullReference>
    <RedundantCondition occurrences="2">
      <code>$field['associationKey']</code>
      <code>isset($field['associationKey']) &amp;&amp; $field['associationKey']</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="4">
      <code>$metadata-&gt;inheritanceType</code>
      <code>$metadata-&gt;inheritanceType</code>
      <code>$sequenceDefinition</code>
      <code>isset($metadata-&gt;lifecycleCallbacks)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Export/Driver/YamlExporter.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$array</code>
      <code>$metadata-&gt;changeTrackingPolicy</code>
    </ArgumentTypeCoercion>
    <DeprecatedClass occurrences="1">
      <code>AbstractExporter</code>
    </DeprecatedClass>
    <DocblockTypeContradiction occurrences="1">
      <code>['name' =&gt; null]</code>
    </DocblockTypeContradiction>
    <LessSpecificReturnStatement occurrences="1">
      <code>$array</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>array&lt;string, mixed&gt;&amp;array{entityListeners: array&lt;class-string, array&lt;string, array{string}&gt;&gt;}</code>
    </MoreSpecificReturnType>
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$_extension</code>
    </NonInvariantDocblockPropertyType>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$associationMapping['joinColumns']</code>
      <code>$associationMapping['orphanRemoval']</code>
      <code>$associationMapping['orphanRemoval']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$metadata-&gt;table</code>
      <code>isset($metadata-&gt;lifecycleCallbacks)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/CountOutputWalker.php">
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$query</code>
    </MoreSpecificImplementedParamType>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$rootClass-&gt;associationMappings[$property]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.php">
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$query</code>
    </MoreSpecificImplementedParamType>
    <PossiblyFalseArgument occurrences="1">
      <code>strrpos($orderByItemString, ' ')</code>
    </PossiblyFalseArgument>
    <PossiblyNullIterator occurrences="1">
      <code>$orderByClause-&gt;orderByItems</code>
    </PossiblyNullIterator>
    <PossiblyNullPropertyAssignmentValue occurrences="3">
      <code>$AST-&gt;orderByClause</code>
      <code>$query-&gt;getFirstResult()</code>
      <code>$query-&gt;getMaxResults()</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch occurrences="1">
      <code>$orderByClause-&gt;orderByItems</code>
    </PossiblyNullPropertyFetch>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$rootClass-&gt;associationMappings[$property]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/Paginator.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$parameters</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="1">
      <code>$this-&gt;count === null</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$count</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $fetchJoinCollection</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/RowNumberOverFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$orderByClause</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/WhereInWalker.php">
    <DocblockTypeContradiction occurrences="3">
      <code>$AST-&gt;whereClause-&gt;conditionalExpression instanceof ConditionalFactor</code>
      <code>$AST-&gt;whereClause-&gt;conditionalExpression instanceof ConditionalPrimary</code>
    </DocblockTypeContradiction>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($id) use ($connection, $type) {</code>
    </MissingClosureReturnType>
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$AST-&gt;whereClause-&gt;conditionalExpression</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType occurrences="1"/>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaTool.php">
    <DeprecatedMethod occurrences="1">
      <code>canEmulateSchemas</code>
    </DeprecatedMethod>
    <MissingClosureParamType occurrences="1">
      <code>$asset</code>
    </MissingClosureParamType>
    <PossiblyNullArgument occurrences="1">
      <code>$referencedFieldName</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>getColumns</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="7">
      <code>$assoc['joinColumns']</code>
      <code>$class-&gt;getAssociationMapping($fieldName)['joinColumns']</code>
      <code>$fieldMapping['precision']</code>
      <code>$fieldMapping['scale']</code>
      <code>$idMapping['joinColumns']</code>
      <code>$mapping['joinColumns']</code>
      <code>$mapping['joinTable']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCondition occurrences="1">
      <code>is_numeric($indexName)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assert(is_array($assoc))</code>
      <code>is_array($assoc)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType occurrences="1">
      <code>$indexName</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaValidator.php">
    <PossiblyUndefinedArrayOffset occurrences="4">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinTable']</code>
      <code>$assoc['relationToSourceKeyColumns']</code>
      <code>$assoc['relationToTargetKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$assoc['orderBy'] !== null</code>
      <code>isset($assoc['orderBy']) &amp;&amp; $assoc['orderBy'] !== null</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType occurrences="1">
      <code>! class_exists($assoc['targetEntity'])</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Setup.php">
    <DeprecatedClass occurrences="2">
      <code>new ClassLoader('Doctrine', $directory)</code>
      <code>new ClassLoader('Symfony\Component', $directory . '/Doctrine')</code>
    </DeprecatedClass>
    <UnresolvableInclude occurrences="2">
      <code>require_once $directory . '/Doctrine/Common/ClassLoader.php'</code>
      <code>require_once dirname($directory) . '/src/ClassLoader.php'</code>
    </UnresolvableInclude>
  </file>
  <file src="lib/Doctrine/ORM/UnitOfWork.php">
    <ArgumentTypeCoercion occurrences="5">
      <code>$class</code>
      <code>$class</code>
      <code>$collectionToDelete</code>
      <code>$collectionToUpdate</code>
      <code>$commitOrder[$i]</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="2">
      <code>! is_object($object)</code>
      <code>is_object($object)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>$em-&gt;getMetadataFactory()</code>
    </InvalidArgument>
    <InvalidNullableReturnType occurrences="1">
      <code>object</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>$this-&gt;entityChangeSets</code>
      <code>$this-&gt;entityChangeSets</code>
    </InvalidPropertyAssignmentValue>
    <MissingParamType occurrences="3">
      <code>$managedCopy</code>
      <code>$prevManagedCopy</code>
      <code>$previousManagedCopy</code>
    </MissingParamType>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;identityMap[$rootClassName][$idHash]</code>
    </NullableReturnStatement>
    <PossiblyInvalidArrayOffset occurrences="1">
      <code>$this-&gt;identityMap[$rootClassName]</code>
    </PossiblyInvalidArrayOffset>
    <PossiblyNullArgument occurrences="12">
      <code>$assoc</code>
      <code>$assoc</code>
      <code>$assoc</code>
      <code>$assoc</code>
      <code>$assoc['targetEntity']</code>
      <code>$class-&gt;getTypeOfField($class-&gt;getSingleIdentifierFieldName())</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collectionToDelete-&gt;getMapping()</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="2">
      <code>$assoc['targetEntity']</code>
      <code>$assoc['type']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="2">
      <code>$class-&gt;reflFields</code>
      <code>$targetClass-&gt;reflFields</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="33">
      <code>buildCachedCollectionPersister</code>
      <code>buildCachedEntityPersister</code>
      <code>getCacheFactory</code>
      <code>getCacheFactory</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['orphanRemoval']</code>
      <code>$assoc['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUndefinedMethod occurrences="3">
      <code>unwrap</code>
      <code>unwrap</code>
      <code>unwrap</code>
    </PossiblyUndefinedMethod>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_array($entity)</code>
    </RedundantConditionGivenDocblockType>
    <ReferenceConstraintViolation occurrences="1">
      <code>$visited</code>
    </ReferenceConstraintViolation>
    <UndefinedInterfaceMethod occurrences="3">
      <code>getMapping</code>
      <code>getMapping</code>
      <code>takeSnapshot</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Utility/HierarchyDiscriminatorResolver.php">
    <NoInterfaceProperties occurrences="2">
      <code>$rootClassMetadata-&gt;name</code>
      <code>$rootClassMetadata-&gt;subClasses</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Utility/IdentifierFlattener.php">
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$class-&gt;associationMappings[$field]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Utility/PersisterHelper.php">
    <PossiblyNullArgument occurrences="1">
      <code>$assoc['mappedBy']</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$assoc['joinTable']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
</files>
