<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.3.0@b6faa3e96b8eb50ec71384c53799b8a107236bb6">
  <file src="lib/Doctrine/ORM/AbstractQuery.php">
    <FalsableReturnStatement occurrences="1">
      <code>! $filteredParameters-&gt;isEmpty() ? $filteredParameters-&gt;first() : null</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <LessSpecificReturnStatement occurrences="1">
      <code>$queryCacheProfile-&gt;generateCacheKeys($sql, $parameters, $hints)</code>
    </LessSpecificReturnStatement>
    <MissingClosureParamType occurrences="3">
      <code>$alias</code>
      <code>$data</code>
      <code>$data</code>
    </MissingClosureParamType>
    <MoreSpecificReturnType occurrences="1">
      <code>array{string, string}</code>
    </MoreSpecificReturnType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$stmt</code>
    </PossiblyInvalidArgument>
    <PossiblyNullReference occurrences="2">
      <code>getCacheLogger</code>
      <code>getQueryCache</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/CacheConfiguration.php">
    <PossiblyNullReference occurrences="1">
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCache.php">
    <InvalidOperand occurrences="1">
      <code>! $association['type']</code>
    </InvalidOperand>
    <PossiblyNullPropertyAssignmentValue occurrences="1"/>
    <PossiblyNullReference occurrences="1">
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultCacheFactory.php">
    <InvalidNullableReturnType occurrences="1">
      <code>string</code>
    </InvalidNullableReturnType>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;fileLockRegionDirectory</code>
    </NullableReturnStatement>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultEntityHydrator.php">
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClassMetadata-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$assoc['joinColumnFieldNames']</code>
      <code>$assoc['targetToSourceKeyColumns']</code>
      <code>$owningAssociation['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <UndefinedInterfaceMethod occurrences="1">
      <code>getCacheRegion</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/DefaultQueryCache.php">
    <ArgumentTypeCoercion occurrences="4">
      <code>$assocKeys-&gt;identifiers[$assocIndex]</code>
      <code>$assocKeys-&gt;identifiers[$assocIndex]</code>
      <code>$cacheKeys-&gt;identifiers[$index]</code>
      <code>$cacheKeys-&gt;identifiers[$index]</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties occurrences="2">
      <code>$assocEntry-&gt;class</code>
      <code>$assocEntry-&gt;class</code>
    </NoInterfaceProperties>
    <PossiblyNullReference occurrences="1">
      <code>getCacheLogger</code>
    </PossiblyNullReference>
    <RedundantCondition occurrences="1">
      <code>assert($cm instanceof ClassMetadata)</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod occurrences="5">
      <code>getCacheRegion</code>
      <code>resolveAssociationEntries</code>
      <code>resolveAssociationEntries</code>
      <code>storeEntityCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/AbstractCollectionPersister.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$cache</code>
      <code>$entityKey</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties occurrences="1">
      <code>$entry-&gt;identifiers</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="1">
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>buildCollectionHydrator</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/NonStrictReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadOnlyCachedCollectionPersister.php">
    <PossiblyNullArgument occurrences="1">
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Collection/ReadWriteCachedCollectionPersister.php">
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
    <UndefinedInterfaceMethod occurrences="2">
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/AbstractEntityPersister.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$cacheEntry</code>
    </ArgumentTypeCoercion>
    <NoInterfaceProperties occurrences="1">
      <code>$cacheEntry-&gt;class</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="2">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$em-&gt;getCache()</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullReference occurrences="2">
      <code>getCacheFactory</code>
      <code>getTimestampRegion</code>
    </PossiblyNullReference>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assert($metadata instanceof ClassMetadata)</code>
    </RedundantConditionGivenDocblockType>
    <UndefinedInterfaceMethod occurrences="9">
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>getCacheRegion</code>
      <code>loadCollectionCache</code>
      <code>loadCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeCollectionCache</code>
      <code>storeEntityCache</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/Persister/Entity/ReadWriteCachedEntityPersister.php">
    <RedundantCondition occurrences="1">
      <code>$isChanged</code>
    </RedundantCondition>
    <UndefinedInterfaceMethod occurrences="2">
      <code>lock</code>
      <code>lock</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Cache/TimestampQueryCacheValidator.php">
    <NoInterfaceProperties occurrences="1">
      <code>$timestamp-&gt;time</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Configuration.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$className</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Decorator/EntityManagerDecorator.php">
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;wrapped-&gt;getClassMetadata($className)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>ClassMetadata</code>
    </InvalidReturnType>
  </file>
  <file src="lib/Doctrine/ORM/EntityManager.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$className</code>
    </ArgumentTypeCoercion>
    <InvalidReturnStatement occurrences="10">
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity</code>
      <code>$entity instanceof $class-&gt;name ? $entity : null</code>
      <code>$entity instanceof $class-&gt;name ? $entity : null</code>
      <code>$persister-&gt;load($sortedId, null, null, [], $lockMode)</code>
      <code>$persister-&gt;loadById($sortedId)</code>
      <code>$this-&gt;metadataFactory</code>
      <code>$this-&gt;metadataFactory-&gt;getMetadataFor($className)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="5">
      <code>ClassMetadataFactory</code>
      <code>Mapping\ClassMetadata</code>
      <code>object|null</code>
      <code>object|null</code>
      <code>object|null</code>
    </InvalidReturnType>
    <PossiblyNullArgument occurrences="2">
      <code>$config-&gt;getProxyDir()</code>
      <code>$config-&gt;getProxyNamespace()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="2">
      <code>createCache</code>
      <code>getCacheFactory</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion occurrences="1">
      <code>new $metadataFactoryClassName()</code>
    </PropertyTypeCoercion>
    <RedundantCast occurrences="1">
      <code>(string) $hydrationMode</code>
    </RedundantCast>
    <UnsafeInstantiation occurrences="1">
      <code>new $class($this)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/EntityRepository.php">
    <InvalidReturnStatement occurrences="2">
      <code>$persister-&gt;load($criteria, null, null, [], null, 1, $orderBy)</code>
      <code>new LazyCriteriaCollection($persister, $criteria)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="2">
      <code>AbstractLazyCollection&lt;int, T&gt;&amp;Selectable&lt;int, T&gt;</code>
      <code>T|null</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement occurrences="1">
      <code>$persister-&gt;loadAll($criteria, $orderBy, $limit, $offset)</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>list&lt;T&gt;</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Event/OnClassMetadataNotFoundEventArgs.php">
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(string) $className</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Id/AssignedGenerator.php">
    <PossiblyNullArgument occurrences="1">
      <code>$entity</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Internal/CommitOrderCalculator.php">
    <RedundantCondition occurrences="1">
      <code>$vertex-&gt;state !== VertexState::Visited</code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/AbstractHydrator.php">
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation occurrences="2">
      <code>return $rowData;</code>
      <code>return $rowData;</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ArrayHydrator.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$index</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$index</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAssignment occurrences="2">
      <code>$result[$resultKey]</code>
      <code>$result[$resultKey]</code>
    </PossiblyNullArrayAssignment>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$newObject['args']</code>
    </PossiblyUndefinedArrayOffset>
    <ReferenceConstraintViolation occurrences="1">
      <code>$result</code>
    </ReferenceConstraintViolation>
    <ReferenceReusedFromConfusingScope occurrences="1">
      <code>$baseElement</code>
    </ReferenceReusedFromConfusingScope>
    <UnsupportedReferenceUsage occurrences="2">
      <code>$baseElement =&amp; $this-&gt;_resultPointers[$parent][key($first)]</code>
      <code>$this-&gt;_resultPointers[$dqlAlias] =&amp; $coll[array_key_last($coll)]</code>
    </UnsupportedReferenceUsage>
  </file>
  <file src="lib/Doctrine/ORM/Internal/Hydration/ObjectHydrator.php">
    <PossiblyFalseArgument occurrences="1">
      <code>$index</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument occurrences="7">
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
      <code>$parentObject</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$relation['mappedBy']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClass-&gt;reflFields</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="6">
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$class-&gt;associationMappings[$class-&gt;identifier[0]]['joinColumns']</code>
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$newObject['args']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/ClassMetadataBuilder.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$repositoryClassName</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Builder/EntityListenerBuilder.php">
    <NoValue occurrences="1">
      <code>$class</code>
    </NoValue>
    <PossiblyNullArgument occurrences="1">
      <code>$class</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadata.php">
    <PropertyNotSetInConstructor occurrences="2">
      <code>ClassMetadata</code>
      <code>ClassMetadata</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataFactory.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$nonSuperclassParents</code>
      <code>new $definition['class']()</code>
    </ArgumentTypeCoercion>
    <InvalidArrayOffset occurrences="1">
      <code>$subClass-&gt;table[$indexType][$indexName]</code>
    </InvalidArrayOffset>
    <InvalidNullableReturnType occurrences="1">
      <code>MappingDriver</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$subClass-&gt;table</code>
    </InvalidPropertyAssignmentValue>
    <NullableReturnStatement occurrences="1">
      <code>$this-&gt;driver</code>
    </NullableReturnStatement>
    <PossiblyInvalidArrayAssignment occurrences="1">
      <code>$subClass-&gt;table[$indexType][$indexName]</code>
    </PossiblyInvalidArrayAssignment>
    <PossiblyInvalidIterator occurrences="1">
      <code>$parentClass-&gt;table[$indexType]</code>
    </PossiblyInvalidIterator>
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;em</code>
      <code>$this-&gt;em</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="8">
      <code>getAllClassNames</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConfiguration</code>
      <code>getConnection</code>
      <code>hasListeners</code>
      <code>hasListeners</code>
      <code>loadMetadataForClass</code>
    </PossiblyNullReference>
    <RedundantCondition occurrences="2">
      <code>$parent-&gt;generatorType</code>
      <code>$parent-&gt;idGenerator</code>
    </RedundantCondition>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ClassMetadataInfo.php">
    <DeprecatedProperty occurrences="4">
      <code>$this-&gt;columnNames</code>
      <code>$this-&gt;columnNames</code>
      <code>$this-&gt;columnNames</code>
      <code>$this-&gt;columnNames</code>
    </DeprecatedProperty>
    <DocblockTypeContradiction occurrences="1">
      <code>! class_exists($mapping['targetEntity'])</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="3">
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$overrideMapping</code>
    </InvalidArgument>
    <InvalidDocblock occurrences="3">
      <code>protected function _validateAndCompleteAssociationMapping(array $mapping)</code>
      <code>protected function _validateAndCompleteManyToManyMapping(array $mapping)</code>
      <code>protected function _validateAndCompleteOneToOneMapping(array $mapping)</code>
    </InvalidDocblock>
    <InvalidNullableReturnType occurrences="2">
      <code>getReflectionClass</code>
      <code>string</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue occurrences="3">
      <code>$definition</code>
      <code>$this-&gt;identifier</code>
      <code>$this-&gt;subClasses</code>
    </InvalidPropertyAssignmentValue>
    <LessSpecificReturnStatement occurrences="5">
      <code>$cache</code>
      <code>$className</code>
      <code>$className</code>
      <code>$columnNames</code>
      <code>$this-&gt;namespace . '\\' . $className</code>
    </LessSpecificReturnStatement>
    <MissingReturnType occurrences="3">
      <code>_validateAndCompleteAssociationMapping</code>
      <code>_validateAndCompleteManyToManyMapping</code>
      <code>_validateAndCompleteOneToOneMapping</code>
    </MissingReturnType>
    <MoreSpecificReturnType occurrences="3">
      <code>array{usage: int, region: string|null}</code>
      <code>class-string|null</code>
      <code>list&lt;string&gt;</code>
    </MoreSpecificReturnType>
    <NoValue occurrences="1">
      <code>$class</code>
    </NoValue>
    <NullableReturnStatement occurrences="2">
      <code>$this-&gt;associationMappings[$assocName]['mappedBy']</code>
      <code>$this-&gt;reflClass</code>
    </NullableReturnStatement>
    <ParamNameMismatch occurrences="1">
      <code>$entity</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="6">
      <code>$class</code>
      <code>$className</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$parentReflFields[$embeddedClass['declaredField']]</code>
      <code>$parentReflFields[$mapping['declaredField']]</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="9">
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getProperty</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>instantiate</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="8">
      <code>$mapping['fieldName']</code>
      <code>$mapping['originalClass']</code>
      <code>$mapping['originalField']</code>
      <code>$mapping['targetEntity']</code>
      <code>$this-&gt;associationMappings[$assocName]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$this-&gt;associationMappings[$idProperty]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$idGenerator</code>
      <code>$table</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="12">
      <code>$identifier</code>
      <code>$this-&gt;associationMappings</code>
      <code>$this-&gt;associationMappings</code>
      <code>$this-&gt;entityListeners</code>
      <code>$this-&gt;fieldMappings</code>
      <code>$this-&gt;fullyQualifiedClassName($repositoryClassName)</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
      <code>$this-&gt;table</code>
    </PropertyTypeCoercion>
    <RedundantCondition occurrences="2">
      <code>$mapping !== false</code>
      <code>$mapping !== false</code>
    </RedundantCondition>
    <RedundantFunctionCall occurrences="1">
      <code>array_values</code>
    </RedundantFunctionCall>
    <TypeDoesNotContainType occurrences="2">
      <code>! $this-&gt;table</code>
      <code>$this-&gt;table</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultEntityListenerResolver.php">
    <InvalidStringClass occurrences="1">
      <code>new $className()</code>
    </InvalidStringClass>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;instances</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultNamingStrategy.php">
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($className, '\\')</code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultQuoteStrategy.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$quotedColumnNames</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>array</code>
    </MoreSpecificReturnType>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$class-&gt;associationMappings[$fieldName]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/DefaultTypedFieldMapper.php">
    <PropertyTypeCoercion occurrences="1">
      <code>array_merge(self::DEFAULT_TYPED_FIELD_MAPPINGS, $typedFieldMappings)</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/AttributeDriver.php">
    <InvalidArgument occurrences="1"/>
    <InvalidArrayAccess occurrences="4">
      <code>$value[0]</code>
      <code>$value[0]</code>
      <code>$value[1]</code>
      <code>$value[1]</code>
    </InvalidArrayAccess>
    <LessSpecificReturnStatement occurrences="1">
      <code>$mapping</code>
    </LessSpecificReturnStatement>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1"/>
    <NoValue occurrences="1">
      <code>$listenerClassName</code>
    </NoValue>
    <PossiblyNullArgument occurrences="1">
      <code>$listenerClassName</code>
    </PossiblyNullArgument>
    <RedundantCondition occurrences="1">
      <code>$metadata-&gt;getReflectionClass()</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="4">
      <code>assert($cacheAttribute instanceof Mapping\Cache)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($method instanceof ReflectionMethod)</code>
      <code>assert($property instanceof ReflectionProperty)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainNull occurrences="1">
      <code>new ReflectionClass($metadata-&gt;name)</code>
    </TypeDoesNotContainNull>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/DatabaseDriver.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$metadata instanceof ClassMetadata</code>
    </DocblockTypeContradiction>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <PossiblyNullArrayAccess occurrences="2">
      <code>$this-&gt;tables[$tableName]</code>
      <code>$this-&gt;tables[$tableName]</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="3">
      <code>getColumns</code>
      <code>getColumns</code>
      <code>getIndexes</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/SimplifiedXmlDriver.php">
    <MissingParamType occurrences="2">
      <code>$fileExtension</code>
      <code>$prefixes</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/Driver/XmlDriver.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>(string) $xmlRoot['repository-class']</code>
      <code>isset($xmlRoot['repository-class']) ? (string) $xmlRoot['repository-class'] : null</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="5">
      <code>$this-&gt;cacheToArray($manyToManyElement-&gt;cache)</code>
      <code>$this-&gt;cacheToArray($manyToOneElement-&gt;cache)</code>
      <code>$this-&gt;cacheToArray($oneToManyElement-&gt;cache)</code>
      <code>$this-&gt;cacheToArray($oneToOneElement-&gt;cache)</code>
    </InvalidArgument>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$metadata-&gt;table</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="1">
      <code>$mapping</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1"/>
    <LessSpecificReturnStatement occurrences="1"/>
    <MissingParamType occurrences="2">
      <code>$fileExtension</code>
      <code>$locator</code>
    </MissingParamType>
    <MoreSpecificImplementedParamType occurrences="1">
      <code>$metadata</code>
    </MoreSpecificImplementedParamType>
    <MoreSpecificReturnType occurrences="1">
      <code>array{usage: int|null, region?: string}</code>
    </MoreSpecificReturnType>
    <NoInterfaceProperties occurrences="4">
      <code>$indexXml-&gt;options</code>
      <code>$uniqueXml-&gt;options</code>
      <code>$xmlRoot-&gt;{'discriminator-column'}</code>
      <code>$xmlRoot-&gt;{'discriminator-map'}</code>
    </NoInterfaceProperties>
    <PossiblyInvalidPropertyFetch occurrences="4">
      <code>$indexXml-&gt;options</code>
      <code>$uniqueXml-&gt;options</code>
      <code>$xmlRoot-&gt;{'discriminator-column'}</code>
      <code>$xmlRoot-&gt;{'discriminator-map'}</code>
    </PossiblyInvalidPropertyFetch>
    <RedundantCondition occurrences="14">
      <code>isset($xmlRoot-&gt;cache)</code>
      <code>isset($xmlRoot-&gt;embedded)</code>
      <code>isset($xmlRoot-&gt;field)</code>
      <code>isset($xmlRoot-&gt;indexes)</code>
      <code>isset($xmlRoot-&gt;options)</code>
      <code>isset($xmlRoot-&gt;{'association-overrides'})</code>
      <code>isset($xmlRoot-&gt;{'attribute-overrides'})</code>
      <code>isset($xmlRoot-&gt;{'entity-listeners'})</code>
      <code>isset($xmlRoot-&gt;{'lifecycle-callbacks'})</code>
      <code>isset($xmlRoot-&gt;{'many-to-many'})</code>
      <code>isset($xmlRoot-&gt;{'many-to-one'})</code>
      <code>isset($xmlRoot-&gt;{'one-to-many'})</code>
      <code>isset($xmlRoot-&gt;{'one-to-one'})</code>
      <code>isset($xmlRoot-&gt;{'unique-constraints'})</code>
    </RedundantCondition>
    <TypeDoesNotContainType occurrences="3">
      <code>$xmlRoot-&gt;getName() === 'embeddable'</code>
      <code>$xmlRoot-&gt;getName() === 'entity'</code>
      <code>$xmlRoot-&gt;getName() === 'mapped-superclass'</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/MappingException.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$className</code>
      <code>$entityName</code>
    </ArgumentTypeCoercion>
    <MissingParamType occurrences="4">
      <code>$className</code>
      <code>$className</code>
      <code>$indexName</code>
      <code>$indexName</code>
    </MissingParamType>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEmbeddedProperty.php">
    <MethodSignatureMismatch occurrences="1">
      <code>$object</code>
    </MethodSignatureMismatch>
    <PropertyNotSetInConstructor occurrences="2">
      <code>ReflectionEmbeddedProperty</code>
      <code>ReflectionEmbeddedProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionEnumProperty.php">
    <MethodSignatureMismatch occurrences="1">
      <code>$object</code>
    </MethodSignatureMismatch>
    <PropertyNotSetInConstructor occurrences="2">
      <code>ReflectionEnumProperty</code>
      <code>ReflectionEnumProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/ReflectionReadonlyProperty.php">
    <PropertyNotSetInConstructor occurrences="2">
      <code>ReflectionReadonlyProperty</code>
      <code>ReflectionReadonlyProperty</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Mapping/UnderscoreNamingStrategy.php">
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($className, '\\')</code>
    </PossiblyFalseOperand>
  </file>
  <file src="lib/Doctrine/ORM/NativeQuery.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$sql</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/ORMInvalidArgumentException.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$entity</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="lib/Doctrine/ORM/PersistentCollection.php">
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>Collection&lt;TKey, T&gt;</code>
    </ImplementedReturnTypeMismatch>
    <InvalidReturnStatement occurrences="1"/>
    <InvalidReturnType occurrences="1">
      <code>Collection&lt;TKey, T&gt;</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement occurrences="1">
      <code>$this-&gt;unwrap()-&gt;matching($criteria)</code>
    </LessSpecificReturnStatement>
    <ParamNameMismatch occurrences="2">
      <code>$value</code>
      <code>$value</code>
    </ParamNameMismatch>
    <PossiblyNullArgument occurrences="5">
      <code>$this-&gt;association</code>
      <code>$this-&gt;association</code>
      <code>$this-&gt;association</code>
      <code>$this-&gt;association['targetEntity']</code>
      <code>$this-&gt;backRefFieldName</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="12">
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['fetch']</code>
      <code>$this-&gt;association['isOwningSide']</code>
      <code>$this-&gt;association['orphanRemoval']</code>
      <code>$this-&gt;association['targetEntity']</code>
      <code>$this-&gt;association['type']</code>
      <code>$this-&gt;association['type']</code>
      <code>$this-&gt;association['type']</code>
      <code>$this-&gt;association['type']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullReference occurrences="2">
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <UndefinedMethod occurrences="1">
      <code>[$this-&gt;unwrap(), 'add']</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/ManyToManyPersister.php">
    <PossiblyNullArgument occurrences="42">
      <code>$association</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$filterMapping</code>
      <code>$filterMapping</code>
      <code>$indexBy</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns'][$joinTableColumn]</code>
      <code>$mapping['relationToTargetKeyColumns'][$joinTableColumn]</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="42">
      <code>$mapping['indexBy']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['isOwningSide']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
      <code>$mapping['relationToSourceKeyColumns'][$joinTableColumn]</code>
      <code>$mapping['relationToTargetKeyColumns']</code>
      <code>$mapping['relationToTargetKeyColumns'][$joinTableColumn]</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="3">
      <code>$associationSourceClass-&gt;associationMappings</code>
      <code>$sourceClass-&gt;associationMappings</code>
      <code>$targetClass-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullIterator occurrences="8">
      <code>$joinColumns</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['inverseJoinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTable']['joinColumns']</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
    </PossiblyNullIterator>
    <PossiblyNullReference occurrences="2">
      <code>getFieldForColumn</code>
      <code>getFieldForColumn</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="10">
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$mapping[$sourceRelationMode]</code>
      <code>$mapping[$targetRelationMode]</code>
      <code>$mapping['joinTable']</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['joinTableColumns']</code>
      <code>$mapping['relationToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Collection/OneToManyPersister.php">
    <InvalidReturnStatement occurrences="2">
      <code>$numDeleted</code>
      <code>$this-&gt;conn-&gt;executeStatement($statement, $parameters)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="2">
      <code>int</code>
      <code>int</code>
    </InvalidReturnType>
    <PossiblyNullArgument occurrences="14">
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$mapping</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="13">
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['mappedBy']</code>
      <code>$mapping['orphanRemoval']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['sourceEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
      <code>$mapping['targetEntity']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClass-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$targetClass-&gt;associationMappings[$mapping['mappedBy']]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/BasicEntityPersister.php">
    <DocblockTypeContradiction occurrences="1">
      <code>$value === null</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="5">
      <code>$hints</code>
      <code>$hints</code>
      <code>[Query::HINT_REFRESH =&gt; true]</code>
      <code>[UnitOfWork::HINT_DEFEREAGERLOAD =&gt; true]</code>
      <code>[UnitOfWork::HINT_DEFEREAGERLOAD =&gt; true]</code>
    </InvalidArgument>
    <LessSpecificReturnStatement occurrences="4">
      <code>$newValue</code>
      <code>$postInsertIds</code>
      <code>[$params, $types]</code>
      <code>[$sqlParams, $sqlTypes]</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="4">
      <code>array</code>
      <code>array</code>
      <code>array</code>
      <code>list&lt;mixed&gt;</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument occurrences="2">
      <code>$assoc['mappedBy']</code>
      <code>$association</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="1">
      <code>$assoc['isOwningSide']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="2">
      <code>$class-&gt;associationMappings</code>
      <code>$class-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="7">
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="16">
      <code>$assoc['inversedBy']</code>
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinColumns']</code>
      <code>$assoc['relationToTargetKeyColumns']</code>
      <code>$assoc['sourceToTargetKeyColumns']</code>
      <code>$association['joinColumns']</code>
      <code>$association['joinColumns']</code>
      <code>$association['joinColumns']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$association['joinTable']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
      <code>$this-&gt;class-&gt;associationMappings[$fieldName]['joinColumns']</code>
      <code>$this-&gt;class-&gt;associationMappings[$idField]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;currentPersisterContext-&gt;sqlTableAliases</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/CachedPersisterContext.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$selectJoinSql</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/JoinedSubclassPersister.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$postInsertIds</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>array</code>
    </MoreSpecificReturnType>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$assoc['targetToSourceKeyColumns']</code>
      <code>$mapping['joinColumns']</code>
      <code>$mapping['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Persisters/Entity/SingleTablePersister.php">
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$assoc['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Proxy/Proxy.php">
    <MissingTemplateParam occurrences="1">
      <code>BaseProxy</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ORM/Proxy/ProxyFactory.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$classMetadata</code>
      <code>$classMetadata</code>
      <code>$classMetadata</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>$classMetadata-&gt;getReflectionProperties()</code>
    </InvalidArgument>
    <NoInterfaceProperties occurrences="3">
      <code>$metadata-&gt;isEmbeddedClass</code>
      <code>$metadata-&gt;isMappedSuperclass</code>
      <code>$proxy-&gt;__isCloning</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="1">
      <code>$property-&gt;name</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch occurrences="1">
      <code>$property-&gt;name</code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference occurrences="2">
      <code>getValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <UndefinedInterfaceMethod occurrences="1">
      <code>__wakeup</code>
    </UndefinedInterfaceMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query.php">
    <InvalidArgument occurrences="1">
      <code>$sqlParams</code>
    </InvalidArgument>
    <LessSpecificReturnStatement occurrences="1">
      <code>$this-&gt;parse()-&gt;getSqlExecutor()-&gt;getSqlStatements()</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>list&lt;string&gt;|string</code>
    </MoreSpecificReturnType>
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;getDQL()</code>
    </PossiblyNullArgument>
    <PossiblyNullReference occurrences="1">
      <code>evictEntityRegion</code>
    </PossiblyNullReference>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$parserResult</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/AbsFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitAndFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/BitOrFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateAddFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <UndefinedPropertyFetch occurrences="1">
      <code>$this-&gt;unit-&gt;value</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateDiffFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;ArithmeticPrimary()</code>
      <code>$parser-&gt;ArithmeticPrimary()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/DateSubFunction.php">
    <UndefinedPropertyFetch occurrences="1">
      <code>$this-&gt;unit-&gt;value</code>
    </UndefinedPropertyFetch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/FunctionNode.php">
    <ParamNameMismatch occurrences="1">
      <code>$sqlWalker</code>
    </ParamNameMismatch>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/IdentityFunction.php">
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$assoc['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/LocateFunction.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;simpleArithmeticExpression</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/ModFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SizeFunction.php">
    <PossiblyNullArrayOffset occurrences="2">
      <code>$targetClass-&gt;associationMappings</code>
      <code>$targetClass-&gt;associationMappings</code>
    </PossiblyNullArrayOffset>
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$owningAssoc['joinTable']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SqrtFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/Functions/SubstringFunction.php">
    <PossiblyInvalidPropertyAssignmentValue occurrences="2">
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
      <code>$parser-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinClassPathExpression.php">
    <UndefinedMethod occurrences="1">
      <code>walkJoinPathExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/JoinVariableDeclaration.php">
    <UndefinedMethod occurrences="1">
      <code>walkJoinVariableDeclaration</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/SimpleWhenClause.php">
    <UndefinedMethod occurrences="1">
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/AST/WhenClause.php">
    <UndefinedMethod occurrences="1">
      <code>walkWhenClauseExpression</code>
    </UndefinedMethod>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/AbstractSqlExecutor.php">
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>null</code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableDeleteExecutor.php">
    <InvalidReturnStatement occurrences="1">
      <code>$numDeleted</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor occurrences="2">
      <code>MultiTableDeleteExecutor</code>
      <code>MultiTableDeleteExecutor</code>
    </PropertyNotSetInConstructor>
    <UninitializedProperty occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/MultiTableUpdateExecutor.php">
    <InvalidReturnStatement occurrences="1">
      <code>$numUpdated</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidIterator occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidIterator>
    <PropertyNotSetInConstructor occurrences="2">
      <code>MultiTableUpdateExecutor</code>
      <code>MultiTableUpdateExecutor</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PropertyTypeCoercion>
    <UninitializedProperty occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </UninitializedProperty>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleSelectExecutor.php">
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>SingleSelectExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Exec/SingleTableDeleteUpdateExecutor.php">
    <InvalidReturnStatement occurrences="1">
      <code>$conn-&gt;executeStatement($this-&gt;_sqlStatements, $params, $types)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>int</code>
    </InvalidReturnType>
    <PossiblyInvalidArgument occurrences="1">
      <code>$this-&gt;_sqlStatements</code>
    </PossiblyInvalidArgument>
    <PropertyNotSetInConstructor occurrences="2">
      <code>SingleTableDeleteUpdateExecutor</code>
      <code>SingleTableDeleteUpdateExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Andx.php">
    <NonInvariantDocblockPropertyType occurrences="2">
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Base.php">
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;parts</code>
    </InvalidPropertyAssignmentValue>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Func.php">
    <LessSpecificReturnStatement occurrences="1">
      <code>$this-&gt;arguments</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="1">
      <code>list&lt;mixed&gt;</code>
    </MoreSpecificReturnType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/GroupBy.php">
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Join.php">
    <PossiblyNullArgument occurrences="1">
      <code>$this-&gt;conditionType</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Literal.php">
    <NonInvariantDocblockPropertyType occurrences="1">
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Orx.php">
    <NonInvariantDocblockPropertyType occurrences="2">
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Expr/Select.php">
    <NonInvariantDocblockPropertyType occurrences="2">
      <code>$allowedClasses</code>
      <code>$parts</code>
    </NonInvariantDocblockPropertyType>
  </file>
  <file src="lib/Doctrine/ORM/Query/Filter/SQLFilter.php">
    <PropertyTypeCoercion occurrences="1">
      <code>$this-&gt;parameters</code>
    </PropertyTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Query/Parser.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$stringPattern</code>
    </ArgumentTypeCoercion>
    <DocblockTypeContradiction occurrences="2">
      <code>$this-&gt;lexer-&gt;lookahead !== null &amp;&amp; $this-&gt;lexer-&gt;lookahead-&gt;type === TokenType::T_ESCAPE</code>
      <code>$token-&gt;type === TokenType::T_OPEN_PARENTHESIS</code>
    </DocblockTypeContradiction>
    <InvalidNullableReturnType occurrences="1">
      <code>AST\SelectStatement|AST\UpdateStatement|AST\DeleteStatement</code>
    </InvalidNullableReturnType>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>$this-&gt;queryComponents</code>
    </InvalidPropertyAssignmentValue>
    <InvalidReturnStatement occurrences="11">
      <code>$factors[0]</code>
      <code>$primary</code>
      <code>$terms[0]</code>
      <code>$this-&gt;CollectionMemberExpression()</code>
      <code>$this-&gt;ComparisonExpression()</code>
      <code>$this-&gt;EmptyCollectionComparisonExpression()</code>
      <code>$this-&gt;ExistsExpression()</code>
      <code>$this-&gt;InExpression()</code>
      <code>$this-&gt;InstanceOfExpression()</code>
      <code>$this-&gt;LikeExpression()</code>
      <code>$this-&gt;NullComparisonExpression()</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="4">
      <code>AST\ArithmeticFactor</code>
      <code>AST\ArithmeticTerm</code>
      <code>AST\BetweenExpression|</code>
      <code>AST\SimpleArithmeticExpression|AST\ArithmeticTerm</code>
    </InvalidReturnType>
    <InvalidStringClass occurrences="3">
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
      <code>new $functionClass($functionName)</code>
    </InvalidStringClass>
    <LessSpecificReturnStatement occurrences="3">
      <code>$function</code>
      <code>$function</code>
      <code>$function</code>
    </LessSpecificReturnStatement>
    <NullableReturnStatement occurrences="1">
      <code>$statement</code>
    </NullableReturnStatement>
    <PossiblyFalseArgument occurrences="1">
      <code>strrpos($fromClassName, '\\')</code>
    </PossiblyFalseArgument>
    <PossiblyInvalidArgument occurrences="9">
      <code>$AST</code>
      <code>$conditionalExpression</code>
      <code>$expr</code>
      <code>$pathExp</code>
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;lexer-&gt;getLiteral($token)</code>
      <code>$this-&gt;lexer-&gt;getLiteral($token)</code>
      <code>$this-&gt;lexer-&gt;getLiteral($token)</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidPropertyAssignmentValue occurrences="3">
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;ConditionalExpression()</code>
      <code>$this-&gt;SimpleArithmeticExpression()</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullArgument occurrences="3">
      <code>$dql</code>
      <code>$this-&gt;query-&gt;getDQL()</code>
      <code>$token-&gt;value</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch occurrences="5">
      <code>$lookaheadType-&gt;value</code>
      <code>$lookaheadType-&gt;value</code>
      <code>$this-&gt;lexer-&gt;glimpse()-&gt;type</code>
      <code>$token-&gt;value</code>
      <code>$token-&gt;value</code>
    </PossiblyNullPropertyFetch>
    <PossiblyUndefinedVariable occurrences="1">
      <code>$args</code>
    </PossiblyUndefinedVariable>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$AST instanceof AST\SelectStatement</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/ParserResult.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$_sqlExecutor</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Query/QueryExpressionVisitor.php">
    <InvalidReturnStatement occurrences="1">
      <code>new ArrayCollection($this-&gt;parameters)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>ArrayCollection&lt;int, mixed&gt;</code>
    </InvalidReturnType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>Comparison::EQ</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Query/ResultSetMappingBuilder.php">
    <PossiblyUndefinedArrayOffset occurrences="2">
      <code>$associationMapping['joinColumns']</code>
      <code>$associationMapping['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Query/SqlWalker.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$this-&gt;conn-&gt;quote((string) $newValue)</code>
      <code>is_string($expression)</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="3">
      <code>$assoc</code>
      <code>$join-&gt;conditionalExpression</code>
      <code>$selectedClass['class']-&gt;name</code>
    </InvalidArgument>
    <PossiblyInvalidArgument occurrences="1">
      <code>$expr</code>
    </PossiblyInvalidArgument>
    <PossiblyNullArgument occurrences="7">
      <code>$arithmeticExpr-&gt;simpleArithmeticExpression</code>
      <code>$arithmeticExpr-&gt;subselect</code>
      <code>$condExpr</code>
      <code>$generalCaseExpression-&gt;elseScalarExpression</code>
      <code>$identificationVariableDecl-&gt;rangeVariableDeclaration</code>
      <code>$simpleCaseExpression-&gt;caseOperand</code>
      <code>$simpleCaseExpression-&gt;elseScalarExpression</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayOffset occurrences="4">
      <code>$targetClass-&gt;associationMappings</code>
      <code>$targetClass-&gt;associationMappings</code>
      <code>$this-&gt;scalarResultAliasMap</code>
      <code>$this-&gt;scalarResultAliasMap</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="1">
      <code>dispatch</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="12">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinTable']</code>
      <code>$assoc['sourceToTargetKeyColumns']</code>
      <code>$assoc['targetToSourceKeyColumns']</code>
      <code>$assoc['type']</code>
      <code>$assoc['type']</code>
      <code>$association['sourceToTargetKeyColumns']</code>
      <code>$association['targetToSourceKeyColumns']</code>
      <code>$owningAssoc['joinTable']</code>
      <code>$owningAssoc['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/QueryBuilder.php">
    <ArgumentTypeCoercion occurrences="6">
      <code>$having</code>
      <code>$having</code>
      <code>$where</code>
      <code>$where</code>
      <code>[$rootAlias =&gt; $join]</code>
      <code>[$rootAlias =&gt; $join]</code>
    </ArgumentTypeCoercion>
    <DeprecatedMethod occurrences="2">
      <code>getRootAlias</code>
      <code>getRootAlias</code>
    </DeprecatedMethod>
    <FalsableReturnStatement occurrences="1">
      <code>! $filteredParameters-&gt;isEmpty() ? $filteredParameters-&gt;first() : null</code>
    </FalsableReturnStatement>
    <InvalidFalsableReturnType occurrences="1">
      <code>Parameter|null</code>
    </InvalidFalsableReturnType>
    <InvalidPropertyAssignmentValue occurrences="1">
      <code>new ArrayCollection($parameters)</code>
    </InvalidPropertyAssignmentValue>
    <LessSpecificReturnStatement occurrences="2">
      <code>$aliases</code>
      <code>$entities</code>
    </LessSpecificReturnStatement>
    <MoreSpecificReturnType occurrences="2">
      <code>list&lt;class-string&gt;</code>
      <code>list&lt;string&gt;</code>
    </MoreSpecificReturnType>
    <PossiblyFalseArgument occurrences="2">
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseArgument>
    <PossiblyFalseOperand occurrences="2">
      <code>$spacePos</code>
      <code>$spacePos</code>
    </PossiblyFalseOperand>
    <PossiblyInvalidIterator occurrences="1">
      <code>$dqlPart</code>
    </PossiblyInvalidIterator>
  </file>
  <file src="lib/Doctrine/ORM/Repository/DefaultRepositoryFactory.php">
    <InvalidReturnStatement occurrences="1">
      <code>$this-&gt;repositoryList[$repositoryHash] ??= $this-&gt;createRepository($entityManager, $entityName)</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>EntityRepository</code>
    </InvalidReturnType>
    <UnsafeInstantiation occurrences="1">
      <code>new $repositoryClassName($entityManager, $metadata)</code>
    </UnsafeInstantiation>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/CollectionRegionCommand.php">
    <PossiblyNullReference occurrences="1">
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/ClearCache/EntityRegionCommand.php">
    <PossiblyNullReference occurrences="1">
      <code>evictAll</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/GenerateProxiesCommand.php">
    <NoInterfaceProperties occurrences="1">
      <code>$metadata-&gt;name</code>
    </NoInterfaceProperties>
    <PossiblyNullArgument occurrences="1">
      <code>$em-&gt;getConfiguration()-&gt;getProxyDir()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/InfoCommand.php">
    <PossiblyNullReference occurrences="1">
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/MappingDescribeCommand.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$metadata-&gt;entityListeners</code>
    </ArgumentTypeCoercion>
    <PossiblyNullReference occurrences="1">
      <code>getAllClassNames</code>
    </PossiblyNullReference>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/RunDqlCommand.php">
    <DeprecatedClass occurrences="1">
      <code>Debug::dump($resultSet, (int) $input-&gt;getOption('depth'), true, false)</code>
    </DeprecatedClass>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/CreateCommand.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$metadatas</code>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/DropCommand.php">
    <ArgumentTypeCoercion occurrences="3">
      <code>$metadatas</code>
      <code>$metadatas</code>
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;getName()</code>
      <code>$this-&gt;getName()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/Command/SchemaTool/UpdateCommand.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$metadatas</code>
    </ArgumentTypeCoercion>
    <PossiblyNullArgument occurrences="2">
      <code>$this-&gt;getName()</code>
      <code>$this-&gt;getName()</code>
    </PossiblyNullArgument>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Console/MetadataFilter.php">
    <InvalidArgument occurrences="1">
      <code>new ArrayIterator($metadatas)</code>
    </InvalidArgument>
    <MissingTemplateParam occurrences="1">
      <code>MetadataFilter</code>
    </MissingTemplateParam>
  </file>
  <file src="lib/Doctrine/ORM/Tools/DebugUnitOfWorkListener.php">
    <PossiblyNullArgument occurrences="1">
      <code>$entity</code>
    </PossiblyNullArgument>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$state === UnitOfWork::STATE_DETACHED</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/CountOutputWalker.php">
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$rootClass-&gt;associationMappings[$property]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/LimitSubqueryOutputWalker.php">
    <PossiblyFalseArgument occurrences="1">
      <code>strrpos($orderByItemString, ' ')</code>
    </PossiblyFalseArgument>
    <PossiblyNullIterator occurrences="1">
      <code>$orderByClause-&gt;orderByItems</code>
    </PossiblyNullIterator>
    <PossiblyNullPropertyAssignmentValue occurrences="1">
      <code>$AST-&gt;orderByClause</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch occurrences="1">
      <code>$orderByClause-&gt;orderByItems</code>
    </PossiblyNullPropertyFetch>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$rootClass-&gt;associationMappings[$property]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/Paginator.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$parameters</code>
    </ArgumentTypeCoercion>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/RowNumberOverFunction.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$orderByClause</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="lib/Doctrine/ORM/Tools/Pagination/WhereInWalker.php">
    <DocblockTypeContradiction occurrences="3">
      <code>$selectStatement-&gt;whereClause-&gt;conditionalExpression instanceof ConditionalFactor</code>
      <code>$selectStatement-&gt;whereClause-&gt;conditionalExpression instanceof ConditionalPrimary</code>
    </DocblockTypeContradiction>
    <MissingClosureReturnType occurrences="1">
      <code>static function ($id) use ($connection, $type) {</code>
    </MissingClosureReturnType>
    <PossiblyInvalidPropertyAssignmentValue occurrences="1">
      <code>$selectStatement-&gt;whereClause-&gt;conditionalExpression</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <RedundantConditionGivenDocblockType occurrences="1"/>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaTool.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$classes</code>
    </ArgumentTypeCoercion>
    <MissingClosureParamType occurrences="1">
      <code>$asset</code>
    </MissingClosureParamType>
    <PossiblyNullArgument occurrences="1">
      <code>$referencedFieldName</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset occurrences="7">
      <code>$assoc['joinColumns']</code>
      <code>$class-&gt;getAssociationMapping($fieldName)['joinColumns']</code>
      <code>$fieldMapping['precision']</code>
      <code>$fieldMapping['scale']</code>
      <code>$idMapping['joinColumns']</code>
      <code>$mapping['joinColumns']</code>
      <code>$mapping['joinTable']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantCondition occurrences="1">
      <code>is_numeric($indexName)</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assert(is_array($assoc))</code>
      <code>is_array($assoc)</code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType occurrences="1">
      <code>$indexName</code>
    </TypeDoesNotContainType>
  </file>
  <file src="lib/Doctrine/ORM/Tools/SchemaValidator.php">
    <PossiblyUndefinedArrayOffset occurrences="4">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['joinTable']</code>
      <code>$assoc['relationToSourceKeyColumns']</code>
      <code>$assoc['relationToTargetKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>$assoc['orderBy'] !== null</code>
      <code>isset($assoc['orderBy']) &amp;&amp; $assoc['orderBy'] !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="lib/Doctrine/ORM/UnitOfWork.php">
    <InvalidArgument occurrences="2">
      <code>$collectionToDelete</code>
      <code>$collectionToUpdate</code>
    </InvalidArgument>
    <InvalidArrayOffset occurrences="1">
      <code>$commitOrder[$i]</code>
    </InvalidArrayOffset>
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>$this-&gt;entityChangeSets</code>
      <code>$this-&gt;entityChangeSets</code>
    </InvalidPropertyAssignmentValue>
    <NoValue occurrences="2">
      <code>$entityState</code>
      <code>$entityState</code>
    </NoValue>
    <PossiblyInvalidArgument occurrences="1">
      <code>$value</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidArrayOffset occurrences="1">
      <code>$this-&gt;identityMap[$rootClassName]</code>
    </PossiblyInvalidArrayOffset>
    <PossiblyNullArgument occurrences="10">
      <code>$assoc</code>
      <code>$assoc</code>
      <code>$assoc['targetEntity']</code>
      <code>$class-&gt;getTypeOfField($class-&gt;getSingleIdentifierFieldName())</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collection-&gt;getOwner()</code>
      <code>$collectionToDelete-&gt;getMapping()</code>
      <code>$collectionToUpdate-&gt;getMapping()</code>
      <code>$entity</code>
      <code>$owner</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess occurrences="2">
      <code>$assoc['targetEntity']</code>
      <code>$assoc['type']</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset occurrences="1">
      <code>$targetClass-&gt;reflFields</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference occurrences="25">
      <code>buildCachedCollectionPersister</code>
      <code>buildCachedEntityPersister</code>
      <code>getCacheFactory</code>
      <code>getCacheFactory</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>getValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
      <code>setValue</code>
    </PossiblyNullReference>
    <PossiblyUndefinedArrayOffset occurrences="3">
      <code>$assoc['joinColumns']</code>
      <code>$assoc['orphanRemoval']</code>
      <code>$assoc['targetToSourceKeyColumns']</code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUndefinedMethod occurrences="3">
      <code>unwrap</code>
      <code>unwrap</code>
      <code>unwrap</code>
    </PossiblyUndefinedMethod>
    <RedundantCondition occurrences="2">
      <code>$i &gt;= 0 &amp;&amp; $this-&gt;entityDeletions</code>
      <code>$this-&gt;entityDeletions</code>
    </RedundantCondition>
    <ReferenceConstraintViolation occurrences="1">
      <code>$visited</code>
    </ReferenceConstraintViolation>
  </file>
  <file src="lib/Doctrine/ORM/Utility/HierarchyDiscriminatorResolver.php">
    <NoInterfaceProperties occurrences="2">
      <code>$rootClassMetadata-&gt;name</code>
      <code>$rootClassMetadata-&gt;subClasses</code>
    </NoInterfaceProperties>
  </file>
  <file src="lib/Doctrine/ORM/Utility/IdentifierFlattener.php">
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$class-&gt;associationMappings[$field]['joinColumns']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
  <file src="lib/Doctrine/ORM/Utility/PersisterHelper.php">
    <PossiblyNullArgument occurrences="1">
      <code>$assoc['mappedBy']</code>
    </PossiblyNullArgument>
    <PossiblyUndefinedArrayOffset occurrences="1">
      <code>$assoc['joinTable']</code>
    </PossiblyUndefinedArrayOffset>
  </file>
</files>
